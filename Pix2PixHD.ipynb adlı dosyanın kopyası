{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm","gpuType":"A100","authorship_tag":"ABX9TyMnDlLFAK/9nGnNOb5QhIKP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-uHVBNunDNEg","executionInfo":{"status":"ok","timestamp":1749830524006,"user_tz":-180,"elapsed":6721,"user":{"displayName":"Biçem Kaya","userId":"05518121626579968437"}},"outputId":"218c7347-6600-4630-df21-f4cd6231c261"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["!git clone https://github.com/NVIDIA/pix2pixHD.git\n","%cd pix2pixHD\n","!pip install dominate\n","!pip install torch torchvision"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G967yL-SDW15","executionInfo":{"status":"ok","timestamp":1749830616713,"user_tz":-180,"elapsed":83121,"user":{"displayName":"Biçem Kaya","userId":"05518121626579968437"}},"outputId":"dc395059-ac3d-4d39-9801-2e69831faa31"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'pix2pixHD'...\n","remote: Enumerating objects: 343, done.\u001b[K\n","remote: Counting objects: 100% (3/3), done.\u001b[K\n","remote: Compressing objects: 100% (3/3), done.\u001b[K\n","remote: Total 343 (delta 0), reused 0 (delta 0), pack-reused 340 (from 1)\u001b[K\n","Receiving objects: 100% (343/343), 55.68 MiB | 48.00 MiB/s, done.\n","Resolving deltas: 100% (156/156), done.\n","/content/pix2pixHD\n","Collecting dominate\n","  Downloading dominate-2.9.1-py2.py3-none-any.whl.metadata (13 kB)\n","Downloading dominate-2.9.1-py2.py3-none-any.whl (29 kB)\n","Installing collected packages: dominate\n","Successfully installed dominate-2.9.1\n","Requirement already satisfied: torch in /usr/local/lib/python3.11/dist-packages (2.6.0+cu124)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.11/dist-packages (0.21.0+cu124)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch) (3.18.0)\n","Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch) (4.14.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch) (3.5)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch) (3.1.6)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch) (2025.3.2)\n","Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch)\n","  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch)\n","  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cublas-cu12==12.4.5.8 (from torch)\n","  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cufft-cu12==11.2.1.3 (from torch)\n","  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-curand-cu12==10.3.5.147 (from torch)\n","  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch)\n","  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch)\n","  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch) (0.6.2)\n","Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch) (2.21.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch) (12.4.127)\n","Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch)\n","  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch) (3.2.0)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch) (1.3.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from torchvision) (2.0.2)\n","Requirement already satisfied: pillow!=8.3.*,>=5.3.0 in /usr/local/lib/python3.11/dist-packages (from torchvision) (11.2.1)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch) (3.0.2)\n","Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m115.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m93.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m57.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m1.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m11.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m35.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m18.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m7.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m75.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12\n","  Attempting uninstall: nvidia-nvjitlink-cu12\n","    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n","    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n","      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n","  Attempting uninstall: nvidia-curand-cu12\n","    Found existing installation: nvidia-curand-cu12 10.3.6.82\n","    Uninstalling nvidia-curand-cu12-10.3.6.82:\n","      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n","  Attempting uninstall: nvidia-cufft-cu12\n","    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n","    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n","      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n","  Attempting uninstall: nvidia-cuda-runtime-cu12\n","    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n","    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n","    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n","    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-cupti-cu12\n","    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n","    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n","  Attempting uninstall: nvidia-cublas-cu12\n","    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n","    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n","      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n","  Attempting uninstall: nvidia-cusparse-cu12\n","    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n","    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n","      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n","  Attempting uninstall: nvidia-cudnn-cu12\n","    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n","    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n","      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n","  Attempting uninstall: nvidia-cusolver-cu12\n","    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n","    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n","      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n","Successfully installed nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127\n"]}]},{"cell_type":"code","source":["import os, shutil, random\n","\n","# Set up your original mask/photo folders\n","masks_dir = '/content/drive/MyDrive/MBL 559E - Group Project/Fifth Test/U2Net_Cl_resized_segmn'\n","images_dir = '/content/drive/MyDrive/MBL 559E - Group Project/Fifth Test/U2Net_Cl_resized_augm'\n","root = '/content/pix2pixHD/datasets/yalihouse_hd/'\n","\n","# Make sure destination folders exist and are empty\n","for folder in ['train_A', 'train_B', 'val_A', 'val_B']:\n","    dest = os.path.join(root, folder)\n","    os.makedirs(dest, exist_ok=True)\n","    # Remove old files if any\n","    for f in os.listdir(dest):\n","        os.remove(os.path.join(dest, f))\n","\n","# Get list of mask files\n","mask_files = [f for f in os.listdir(masks_dir) if f.lower().endswith(('.png', '.jpg', '.jpeg'))]\n","random.shuffle(mask_files)\n","\n","split = int(0.9 * len(mask_files))\n","train_files = mask_files[:split]\n","val_files = mask_files[split:]\n","\n","def process_split(files, A_dir, B_dir):\n","    for fname in files:\n","        base = os.path.splitext(fname)[0].replace('_mask', '')\n","        mask_path = os.path.join(masks_dir, fname)\n","        img_path = None\n","        for ext in ['.png', '.jpg', '.jpeg']:\n","            candidate = os.path.join(images_dir, base + ext)\n","            if os.path.exists(candidate):\n","                img_path = candidate\n","                break\n","        if not img_path:\n","            print(f\"No image found for mask {fname}\")\n","            continue\n","        # Copy to A and B\n","        shutil.copy(mask_path, os.path.join(A_dir, base + '.png'))\n","        shutil.copy(img_path, os.path.join(B_dir, base + '.png'))\n","\n","# Fill train/val\n","process_split(train_files, os.path.join(root, 'train_A'), os.path.join(root, 'train_B'))\n","process_split(val_files, os.path.join(root, 'val_A'), os.path.join(root, 'val_B'))\n","\n","# Check results\n","print(\"train_A:\", len(os.listdir(os.path.join(root, 'train_A'))))\n","print(\"train_B:\", len(os.listdir(os.path.join(root, 'train_B'))))\n","print(\"val_A:\", len(os.listdir(os.path.join(root, 'val_A'))))\n","print(\"val_B:\", len(os.listdir(os.path.join(root, 'val_B'))))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kmVTMBvtGEVK","executionInfo":{"status":"ok","timestamp":1749831198490,"user_tz":-180,"elapsed":416360,"user":{"displayName":"Biçem Kaya","userId":"05518121626579968437"}},"outputId":"51fa8f93-4d4e-4fb2-d9d7-9487ada995ef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["train_A: 1481\n","train_B: 1481\n","val_A: 165\n","val_B: 165\n"]}]},{"cell_type":"code","source":["import cv2\n","import os\n","\n","folders = [\n","    '/content/pix2pixHD/datasets/yalihouse_hd/train_A',\n","    '/content/pix2pixHD/datasets/yalihouse_hd/train_B',\n","    '/content/pix2pixHD/datasets/yalihouse_hd/val_A',\n","    '/content/pix2pixHD/datasets/yalihouse_hd/val_B'\n","]\n","\n","size = (256, 256)  # Change this if you want to use a different size!\n","\n","for folder in folders:\n","    for fname in os.listdir(folder):\n","        fpath = os.path.join(folder, fname)\n","        try:\n","            img = cv2.imread(fpath)\n","            if img is None:\n","                print(f\"Failed to load {fpath}, skipping.\")\n","                continue\n","            if img.shape[:2] != size[::-1]:\n","                img = cv2.resize(img, size, interpolation=cv2.INTER_AREA)\n","                cv2.imwrite(fpath, img)\n","        except Exception as e:\n","            print(f\"Error processing {fpath}: {e}\")\n","\n","print(\"✅ All images are now resized to\", size)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rK4HaZIAS0qM","executionInfo":{"status":"ok","timestamp":1749831593763,"user_tz":-180,"elapsed":3631,"user":{"displayName":"Biçem Kaya","userId":"05518121626579968437"}},"outputId":"55853c28-70a8-442d-8790-64766d495d04"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ All images are now resized to (256, 256)\n"]}]},{"cell_type":"code","source":["!python train.py --name yalihouse_hd \\\n","  --dataroot datasets/yalihouse_hd \\\n","  --label_nc 0 \\\n","  --no_instance \\\n","  --resize_or_crop none \\\n","  --batchSize 8 \\\n","  --save_epoch_freq 5\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j3IcXq9iP184","outputId":"658fba3f-e449-422a-a9aa-a181ff9a0529","collapsed":true},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["------------ Options -------------\n","batchSize: 8\n","beta1: 0.5\n","checkpoints_dir: ./checkpoints\n","continue_train: False\n","data_type: 32\n","dataroot: datasets/yalihouse_hd\n","debug: False\n","display_freq: 100\n","display_winsize: 512\n","feat_num: 3\n","fineSize: 512\n","fp16: False\n","gpu_ids: [0]\n","input_nc: 3\n","instance_feat: False\n","isTrain: True\n","label_feat: False\n","label_nc: 0\n","lambda_feat: 10.0\n","loadSize: 1024\n","load_features: False\n","load_pretrain: \n","local_rank: 0\n","lr: 0.0002\n","max_dataset_size: inf\n","model: pix2pixHD\n","nThreads: 2\n","n_blocks_global: 9\n","n_blocks_local: 3\n","n_clusters: 10\n","n_downsample_E: 4\n","n_downsample_global: 4\n","n_layers_D: 3\n","n_local_enhancers: 1\n","name: yalihouse_hd\n","ndf: 64\n","nef: 16\n","netG: global\n","ngf: 64\n","niter: 100\n","niter_decay: 100\n","niter_fix_global: 0\n","no_flip: False\n","no_ganFeat_loss: False\n","no_html: False\n","no_instance: True\n","no_lsgan: False\n","no_vgg_loss: False\n","norm: instance\n","num_D: 2\n","output_nc: 3\n","phase: train\n","pool_size: 0\n","print_freq: 100\n","resize_or_crop: none\n","save_epoch_freq: 5\n","save_latest_freq: 1000\n","serial_batches: False\n","tf_log: False\n","use_dropout: False\n","verbose: False\n","which_epoch: latest\n","-------------- End ----------------\n","CustomDatasetDataLoader\n","dataset [AlignedDataset] was created\n","#training images = 1480\n","GlobalGenerator(\n","  (model): Sequential(\n","    (0): ReflectionPad2d((3, 3, 3, 3))\n","    (1): Conv2d(3, 64, kernel_size=(7, 7), stride=(1, 1))\n","    (2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (3): ReLU(inplace=True)\n","    (4): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","    (5): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (6): ReLU(inplace=True)\n","    (7): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","    (8): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (9): ReLU(inplace=True)\n","    (10): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","    (11): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (12): ReLU(inplace=True)\n","    (13): Conv2d(512, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","    (14): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (15): ReLU(inplace=True)\n","    (16): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (17): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (18): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (19): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (20): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (21): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (22): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (23): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (24): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (25): ConvTranspose2d(1024, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n","    (26): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (27): ReLU(inplace=True)\n","    (28): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n","    (29): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (30): ReLU(inplace=True)\n","    (31): ConvTranspose2d(256, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n","    (32): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (33): ReLU(inplace=True)\n","    (34): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n","    (35): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (36): ReLU(inplace=True)\n","    (37): ReflectionPad2d((3, 3, 3, 3))\n","    (38): Conv2d(64, 3, kernel_size=(7, 7), stride=(1, 1))\n","    (39): Tanh()\n","  )\n",")\n","MultiscaleDiscriminator(\n","  (scale0_layer0): Sequential(\n","    (0): Conv2d(6, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))\n","    (1): LeakyReLU(negative_slope=0.2, inplace=True)\n","  )\n","  (scale0_layer1): Sequential(\n","    (0): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))\n","    (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","  )\n","  (scale0_layer2): Sequential(\n","    (0): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))\n","    (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","  )\n","  (scale0_layer3): Sequential(\n","    (0): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))\n","    (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","  )\n","  (scale0_layer4): Sequential(\n","    (0): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))\n","  )\n","  (scale1_layer0): Sequential(\n","    (0): Conv2d(6, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))\n","    (1): LeakyReLU(negative_slope=0.2, inplace=True)\n","  )\n","  (scale1_layer1): Sequential(\n","    (0): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))\n","    (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","  )\n","  (scale1_layer2): Sequential(\n","    (0): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))\n","    (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","  )\n","  (scale1_layer3): Sequential(\n","    (0): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))\n","    (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (2): LeakyReLU(negative_slope=0.2, inplace=True)\n","  )\n","  (scale1_layer4): Sequential(\n","    (0): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))\n","  )\n","  (downsample): AvgPool2d(kernel_size=3, stride=2, padding=[1, 1])\n",")\n","/usr/local/lib/python3.11/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n","  warnings.warn(\n","/usr/local/lib/python3.11/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG19_Weights.IMAGENET1K_V1`. You can also use `weights=VGG19_Weights.DEFAULT` to get the most up-to-date weights.\n","  warnings.warn(msg)\n","Downloading: \"https://download.pytorch.org/models/vgg19-dcbb9e9d.pth\" to /root/.cache/torch/hub/checkpoints/vgg19-dcbb9e9d.pth\n","100% 548M/548M [00:02<00:00, 212MB/s]\n","create web directory ./checkpoints/yalihouse_hd/web...\n","/content/pix2pixHD/models/networks.py:95: UserWarning: The torch.cuda.*DtypeTensor constructors are no longer recommended. It's best to use methods such as torch.tensor(data, dtype=*, device='cuda') to create tensors. (Triggered internally at /pytorch/torch/csrc/tensor/python_tensor.cpp:78.)\n","  fake_tensor = self.Tensor(input.size()).fill_(self.fake_label)\n","(epoch: 1, iters: 200, time: 0.020) G_GAN: 1.752 G_GAN_Feat: 6.886 G_VGG: 6.266 D_real: 1.256 D_fake: 1.139 \n","(epoch: 1, iters: 400, time: 0.015) G_GAN: 1.166 G_GAN_Feat: 5.083 G_VGG: 5.497 D_real: 1.079 D_fake: 1.326 \n","(epoch: 1, iters: 600, time: 0.015) G_GAN: 0.676 G_GAN_Feat: 4.031 G_VGG: 6.286 D_real: 0.581 D_fake: 0.524 \n","(epoch: 1, iters: 800, time: 0.015) G_GAN: 1.817 G_GAN_Feat: 4.661 G_VGG: 7.233 D_real: 1.666 D_fake: 1.668 \n","(epoch: 1, iters: 1000, time: 0.016) G_GAN: 0.773 G_GAN_Feat: 3.371 G_VGG: 4.823 D_real: 0.581 D_fake: 0.477 \n","saving the latest model (epoch 1, total_steps 1000)\n","(epoch: 1, iters: 1200, time: 0.015) G_GAN: 0.591 G_GAN_Feat: 3.453 G_VGG: 4.852 D_real: 0.557 D_fake: 0.595 \n","(epoch: 1, iters: 1400, time: 0.015) G_GAN: 0.789 G_GAN_Feat: 4.502 G_VGG: 5.326 D_real: 0.570 D_fake: 0.410 \n","End of epoch 1 / 200 \t Time Taken: 26 sec\n","(epoch: 2, iters: 120, time: 0.016) G_GAN: 0.618 G_GAN_Feat: 3.454 G_VGG: 4.300 D_real: 0.340 D_fake: 0.490 \n","(epoch: 2, iters: 320, time: 0.015) G_GAN: 0.810 G_GAN_Feat: 4.595 G_VGG: 6.283 D_real: 0.374 D_fake: 0.421 \n","(epoch: 2, iters: 520, time: 0.015) G_GAN: 0.868 G_GAN_Feat: 3.808 G_VGG: 4.203 D_real: 0.489 D_fake: 0.351 \n","saving the latest model (epoch 2, total_steps 2000)\n","(epoch: 2, iters: 720, time: 0.015) G_GAN: 0.513 G_GAN_Feat: 3.584 G_VGG: 4.177 D_real: 0.426 D_fake: 0.649 \n","(epoch: 2, iters: 920, time: 0.015) G_GAN: 0.681 G_GAN_Feat: 3.201 G_VGG: 3.852 D_real: 0.442 D_fake: 0.814 \n","(epoch: 2, iters: 1120, time: 0.015) G_GAN: 0.552 G_GAN_Feat: 4.348 G_VGG: 4.953 D_real: 0.375 D_fake: 0.543 \n","(epoch: 2, iters: 1320, time: 0.015) G_GAN: 0.696 G_GAN_Feat: 4.173 G_VGG: 5.901 D_real: 0.378 D_fake: 0.501 \n","End of epoch 2 / 200 \t Time Taken: 25 sec\n","(epoch: 3, iters: 40, time: 0.016) G_GAN: 0.862 G_GAN_Feat: 3.459 G_VGG: 3.906 D_real: 0.632 D_fake: 0.558 \n","saving the latest model (epoch 3, total_steps 3000)\n","(epoch: 3, iters: 240, time: 0.015) G_GAN: 1.061 G_GAN_Feat: 3.829 G_VGG: 3.605 D_real: 0.819 D_fake: 0.228 \n","(epoch: 3, iters: 440, time: 0.015) G_GAN: 1.067 G_GAN_Feat: 4.727 G_VGG: 5.477 D_real: 0.691 D_fake: 0.290 \n","(epoch: 3, iters: 640, time: 0.015) G_GAN: 0.508 G_GAN_Feat: 4.865 G_VGG: 6.213 D_real: 0.188 D_fake: 0.638 \n","(epoch: 3, iters: 840, time: 0.015) G_GAN: 0.791 G_GAN_Feat: 3.865 G_VGG: 3.950 D_real: 0.558 D_fake: 0.493 \n","(epoch: 3, iters: 1040, time: 0.015) G_GAN: 0.716 G_GAN_Feat: 4.879 G_VGG: 4.682 D_real: 0.281 D_fake: 0.380 \n","saving the latest model (epoch 3, total_steps 4000)\n","(epoch: 3, iters: 1240, time: 0.016) G_GAN: 0.972 G_GAN_Feat: 4.883 G_VGG: 5.136 D_real: 0.558 D_fake: 0.294 \n","(epoch: 3, iters: 1440, time: 0.015) G_GAN: 1.087 G_GAN_Feat: 3.592 G_VGG: 3.859 D_real: 0.635 D_fake: 0.201 \n","End of epoch 3 / 200 \t Time Taken: 28 sec\n","(epoch: 4, iters: 160, time: 0.016) G_GAN: 0.831 G_GAN_Feat: 4.509 G_VGG: 4.901 D_real: 0.338 D_fake: 0.308 \n","(epoch: 4, iters: 360, time: 0.015) G_GAN: 1.010 G_GAN_Feat: 4.370 G_VGG: 5.103 D_real: 0.654 D_fake: 0.485 \n","(epoch: 4, iters: 560, time: 0.015) G_GAN: 0.535 G_GAN_Feat: 4.638 G_VGG: 5.074 D_real: 0.265 D_fake: 0.553 \n","saving the latest model (epoch 4, total_steps 5000)\n","(epoch: 4, iters: 760, time: 0.016) G_GAN: 0.731 G_GAN_Feat: 4.670 G_VGG: 4.814 D_real: 0.485 D_fake: 0.583 \n","(epoch: 4, iters: 960, time: 0.015) G_GAN: 1.298 G_GAN_Feat: 5.109 G_VGG: 5.679 D_real: 0.828 D_fake: 0.254 \n","(epoch: 4, iters: 1160, time: 0.015) G_GAN: 1.342 G_GAN_Feat: 4.539 G_VGG: 4.403 D_real: 0.720 D_fake: 0.147 \n","(epoch: 4, iters: 1360, time: 0.015) G_GAN: 1.014 G_GAN_Feat: 4.978 G_VGG: 5.462 D_real: 0.592 D_fake: 0.265 \n","End of epoch 4 / 200 \t Time Taken: 25 sec\n","(epoch: 5, iters: 80, time: 0.016) G_GAN: 0.911 G_GAN_Feat: 3.998 G_VGG: 4.435 D_real: 0.745 D_fake: 0.302 \n","saving the latest model (epoch 5, total_steps 6000)\n","(epoch: 5, iters: 280, time: 0.015) G_GAN: 0.651 G_GAN_Feat: 5.135 G_VGG: 5.519 D_real: 0.397 D_fake: 0.589 \n","(epoch: 5, iters: 480, time: 0.015) G_GAN: 0.838 G_GAN_Feat: 4.956 G_VGG: 6.007 D_real: 0.402 D_fake: 0.305 \n","(epoch: 5, iters: 680, time: 0.015) G_GAN: 1.080 G_GAN_Feat: 5.257 G_VGG: 5.789 D_real: 0.622 D_fake: 0.226 \n","(epoch: 5, iters: 880, time: 0.015) G_GAN: 0.685 G_GAN_Feat: 4.372 G_VGG: 4.024 D_real: 0.508 D_fake: 0.420 \n","(epoch: 5, iters: 1080, time: 0.015) G_GAN: 0.707 G_GAN_Feat: 5.021 G_VGG: 5.183 D_real: 0.401 D_fake: 0.498 \n","saving the latest model (epoch 5, total_steps 7000)\n","(epoch: 5, iters: 1280, time: 0.015) G_GAN: 0.680 G_GAN_Feat: 4.375 G_VGG: 3.605 D_real: 0.405 D_fake: 0.405 \n","(epoch: 5, iters: 1480, time: 0.015) G_GAN: 1.059 G_GAN_Feat: 4.737 G_VGG: 5.081 D_real: 0.635 D_fake: 0.208 \n","End of epoch 5 / 200 \t Time Taken: 28 sec\n","saving the model at the end of epoch 5, iters 7400\n","(epoch: 6, iters: 200, time: 0.016) G_GAN: 0.725 G_GAN_Feat: 4.879 G_VGG: 4.938 D_real: 0.360 D_fake: 0.370 \n","(epoch: 6, iters: 400, time: 0.015) G_GAN: 0.745 G_GAN_Feat: 6.605 G_VGG: 6.608 D_real: 0.540 D_fake: 0.520 \n","(epoch: 6, iters: 600, time: 0.015) G_GAN: 1.031 G_GAN_Feat: 4.714 G_VGG: 4.066 D_real: 0.597 D_fake: 0.654 \n","saving the latest model (epoch 6, total_steps 8000)\n","(epoch: 6, iters: 800, time: 0.016) G_GAN: 0.553 G_GAN_Feat: 3.995 G_VGG: 3.784 D_real: 0.493 D_fake: 0.500 \n","(epoch: 6, iters: 1000, time: 0.015) G_GAN: 0.834 G_GAN_Feat: 4.269 G_VGG: 4.134 D_real: 0.505 D_fake: 0.305 \n","(epoch: 6, iters: 1200, time: 0.015) G_GAN: 0.542 G_GAN_Feat: 4.918 G_VGG: 4.890 D_real: 0.484 D_fake: 0.535 \n","(epoch: 6, iters: 1400, time: 0.015) G_GAN: 0.678 G_GAN_Feat: 4.471 G_VGG: 4.789 D_real: 0.308 D_fake: 0.447 \n","End of epoch 6 / 200 \t Time Taken: 25 sec\n","(epoch: 7, iters: 120, time: 0.016) G_GAN: 0.864 G_GAN_Feat: 3.906 G_VGG: 4.129 D_real: 0.559 D_fake: 0.330 \n","saving the latest model (epoch 7, total_steps 9000)\n","(epoch: 7, iters: 320, time: 0.015) G_GAN: 0.835 G_GAN_Feat: 5.196 G_VGG: 5.219 D_real: 0.381 D_fake: 0.376 \n","(epoch: 7, iters: 520, time: 0.015) G_GAN: 0.409 G_GAN_Feat: 5.427 G_VGG: 5.034 D_real: 0.284 D_fake: 0.772 \n","(epoch: 7, iters: 720, time: 0.015) G_GAN: 0.433 G_GAN_Feat: 3.802 G_VGG: 3.329 D_real: 0.245 D_fake: 0.686 \n","(epoch: 7, iters: 920, time: 0.015) G_GAN: 1.592 G_GAN_Feat: 5.269 G_VGG: 5.427 D_real: 1.110 D_fake: 0.227 \n","(epoch: 7, iters: 1120, time: 0.015) G_GAN: 0.620 G_GAN_Feat: 5.178 G_VGG: 5.421 D_real: 0.432 D_fake: 0.438 \n","saving the latest model (epoch 7, total_steps 10000)\n","(epoch: 7, iters: 1320, time: 0.015) G_GAN: 1.194 G_GAN_Feat: 5.304 G_VGG: 5.896 D_real: 0.746 D_fake: 0.618 \n","End of epoch 7 / 200 \t Time Taken: 28 sec\n","(epoch: 8, iters: 40, time: 0.016) G_GAN: 1.024 G_GAN_Feat: 5.518 G_VGG: 4.629 D_real: 0.651 D_fake: 0.212 \n","(epoch: 8, iters: 240, time: 0.015) G_GAN: 0.652 G_GAN_Feat: 4.833 G_VGG: 4.573 D_real: 0.283 D_fake: 0.420 \n","(epoch: 8, iters: 440, time: 0.015) G_GAN: 2.114 G_GAN_Feat: 4.446 G_VGG: 4.429 D_real: 2.455 D_fake: 1.778 \n","(epoch: 8, iters: 640, time: 0.015) G_GAN: 0.658 G_GAN_Feat: 4.427 G_VGG: 4.606 D_real: 0.444 D_fake: 0.416 \n","saving the latest model (epoch 8, total_steps 11000)\n","(epoch: 8, iters: 840, time: 0.016) G_GAN: 0.951 G_GAN_Feat: 3.806 G_VGG: 4.435 D_real: 0.747 D_fake: 0.293 \n","(epoch: 8, iters: 1040, time: 0.015) G_GAN: 0.641 G_GAN_Feat: 3.987 G_VGG: 4.784 D_real: 0.433 D_fake: 0.457 \n","(epoch: 8, iters: 1240, time: 0.015) G_GAN: 0.532 G_GAN_Feat: 4.142 G_VGG: 4.606 D_real: 0.368 D_fake: 0.500 \n","(epoch: 8, iters: 1440, time: 0.015) G_GAN: 0.494 G_GAN_Feat: 4.565 G_VGG: 4.980 D_real: 0.316 D_fake: 0.560 \n","End of epoch 8 / 200 \t Time Taken: 25 sec\n","(epoch: 9, iters: 160, time: 0.016) G_GAN: 0.673 G_GAN_Feat: 5.467 G_VGG: 6.223 D_real: 0.304 D_fake: 0.409 \n","saving the latest model (epoch 9, total_steps 12000)\n","(epoch: 9, iters: 360, time: 0.016) G_GAN: 0.577 G_GAN_Feat: 4.525 G_VGG: 5.400 D_real: 0.374 D_fake: 0.497 \n","(epoch: 9, iters: 560, time: 0.015) G_GAN: 0.677 G_GAN_Feat: 4.853 G_VGG: 6.106 D_real: 0.435 D_fake: 0.419 \n","(epoch: 9, iters: 760, time: 0.015) G_GAN: 0.744 G_GAN_Feat: 4.516 G_VGG: 4.655 D_real: 0.448 D_fake: 0.375 \n","(epoch: 9, iters: 960, time: 0.015) G_GAN: 0.516 G_GAN_Feat: 5.418 G_VGG: 4.921 D_real: 0.295 D_fake: 0.527 \n","(epoch: 9, iters: 1160, time: 0.015) G_GAN: 0.567 G_GAN_Feat: 5.065 G_VGG: 5.114 D_real: 0.347 D_fake: 0.483 \n","saving the latest model (epoch 9, total_steps 13000)\n","(epoch: 9, iters: 1360, time: 0.015) G_GAN: 0.789 G_GAN_Feat: 3.931 G_VGG: 4.247 D_real: 0.662 D_fake: 0.332 \n","End of epoch 9 / 200 \t Time Taken: 27 sec\n","(epoch: 10, iters: 80, time: 0.016) G_GAN: 0.649 G_GAN_Feat: 5.326 G_VGG: 5.471 D_real: 0.375 D_fake: 0.412 \n","(epoch: 10, iters: 280, time: 0.015) G_GAN: 1.012 G_GAN_Feat: 4.336 G_VGG: 4.911 D_real: 0.641 D_fake: 0.277 \n","(epoch: 10, iters: 480, time: 0.015) G_GAN: 0.688 G_GAN_Feat: 4.424 G_VGG: 4.919 D_real: 0.361 D_fake: 0.487 \n","(epoch: 10, iters: 680, time: 0.015) G_GAN: 0.599 G_GAN_Feat: 5.284 G_VGG: 5.296 D_real: 0.539 D_fake: 0.467 \n","saving the latest model (epoch 10, total_steps 14000)\n","(epoch: 10, iters: 880, time: 0.015) G_GAN: 0.898 G_GAN_Feat: 3.802 G_VGG: 4.222 D_real: 0.489 D_fake: 0.300 \n","(epoch: 10, iters: 1080, time: 0.015) G_GAN: 0.569 G_GAN_Feat: 4.286 G_VGG: 4.448 D_real: 0.383 D_fake: 0.490 \n","(epoch: 10, iters: 1280, time: 0.015) G_GAN: 0.932 G_GAN_Feat: 4.377 G_VGG: 4.439 D_real: 0.546 D_fake: 0.318 \n","(epoch: 10, iters: 1480, time: 0.015) G_GAN: 0.885 G_GAN_Feat: 4.726 G_VGG: 5.502 D_real: 0.550 D_fake: 0.280 \n","End of epoch 10 / 200 \t Time Taken: 25 sec\n","saving the model at the end of epoch 10, iters 14800\n","(epoch: 11, iters: 200, time: 0.016) G_GAN: 0.798 G_GAN_Feat: 4.163 G_VGG: 4.319 D_real: 0.572 D_fake: 0.330 \n","saving the latest model (epoch 11, total_steps 15000)\n","(epoch: 11, iters: 400, time: 0.015) G_GAN: 0.550 G_GAN_Feat: 6.008 G_VGG: 5.841 D_real: 0.382 D_fake: 0.509 \n","(epoch: 11, iters: 600, time: 0.015) G_GAN: 0.856 G_GAN_Feat: 3.717 G_VGG: 4.431 D_real: 0.770 D_fake: 0.280 \n","(epoch: 11, iters: 800, time: 0.015) G_GAN: 0.712 G_GAN_Feat: 4.686 G_VGG: 4.753 D_real: 0.419 D_fake: 0.386 \n","(epoch: 11, iters: 1000, time: 0.015) G_GAN: 1.168 G_GAN_Feat: 4.755 G_VGG: 5.628 D_real: 0.786 D_fake: 0.230 \n","(epoch: 11, iters: 1200, time: 0.015) G_GAN: 0.717 G_GAN_Feat: 4.292 G_VGG: 4.851 D_real: 0.477 D_fake: 0.371 \n","saving the latest model (epoch 11, total_steps 16000)\n","(epoch: 11, iters: 1400, time: 0.015) G_GAN: 0.382 G_GAN_Feat: 3.997 G_VGG: 4.026 D_real: 0.279 D_fake: 0.722 \n","End of epoch 11 / 200 \t Time Taken: 28 sec\n","(epoch: 12, iters: 120, time: 0.016) G_GAN: 0.706 G_GAN_Feat: 3.952 G_VGG: 4.471 D_real: 0.460 D_fake: 0.371 \n","(epoch: 12, iters: 320, time: 0.015) G_GAN: 0.649 G_GAN_Feat: 3.454 G_VGG: 3.856 D_real: 0.293 D_fake: 0.420 \n","(epoch: 12, iters: 520, time: 0.015) G_GAN: 0.794 G_GAN_Feat: 4.242 G_VGG: 4.348 D_real: 0.513 D_fake: 0.307 \n","(epoch: 12, iters: 720, time: 0.015) G_GAN: 0.685 G_GAN_Feat: 6.140 G_VGG: 5.429 D_real: 0.436 D_fake: 0.520 \n","saving the latest model (epoch 12, total_steps 17000)\n","(epoch: 12, iters: 920, time: 0.015) G_GAN: 0.750 G_GAN_Feat: 3.895 G_VGG: 4.342 D_real: 0.395 D_fake: 0.342 \n","(epoch: 12, iters: 1120, time: 0.015) G_GAN: 0.558 G_GAN_Feat: 5.545 G_VGG: 4.928 D_real: 0.162 D_fake: 0.544 \n","(epoch: 12, iters: 1320, time: 0.015) G_GAN: 0.696 G_GAN_Feat: 3.882 G_VGG: 3.939 D_real: 0.339 D_fake: 0.376 \n","End of epoch 12 / 200 \t Time Taken: 25 sec\n","(epoch: 13, iters: 40, time: 0.016) G_GAN: 0.713 G_GAN_Feat: 3.995 G_VGG: 4.175 D_real: 0.463 D_fake: 0.469 \n","(epoch: 13, iters: 240, time: 0.015) G_GAN: 0.677 G_GAN_Feat: 5.342 G_VGG: 4.888 D_real: 0.274 D_fake: 0.454 \n","saving the latest model (epoch 13, total_steps 18000)\n","(epoch: 13, iters: 440, time: 0.015) G_GAN: 0.723 G_GAN_Feat: 5.107 G_VGG: 4.910 D_real: 0.438 D_fake: 0.650 \n","(epoch: 13, iters: 640, time: 0.015) G_GAN: 0.669 G_GAN_Feat: 3.342 G_VGG: 3.288 D_real: 0.640 D_fake: 0.483 \n","(epoch: 13, iters: 840, time: 0.015) G_GAN: 0.782 G_GAN_Feat: 5.108 G_VGG: 5.774 D_real: 0.327 D_fake: 0.391 \n","(epoch: 13, iters: 1040, time: 0.015) G_GAN: 0.747 G_GAN_Feat: 4.504 G_VGG: 4.512 D_real: 0.529 D_fake: 0.472 \n","(epoch: 13, iters: 1240, time: 0.015) G_GAN: 0.597 G_GAN_Feat: 4.733 G_VGG: 4.406 D_real: 0.421 D_fake: 0.543 \n","saving the latest model (epoch 13, total_steps 19000)\n","(epoch: 13, iters: 1440, time: 0.016) G_GAN: 0.660 G_GAN_Feat: 4.802 G_VGG: 4.584 D_real: 0.334 D_fake: 0.402 \n","End of epoch 13 / 200 \t Time Taken: 28 sec\n","(epoch: 14, iters: 160, time: 0.016) G_GAN: 1.098 G_GAN_Feat: 4.144 G_VGG: 4.332 D_real: 0.870 D_fake: 0.182 \n","(epoch: 14, iters: 360, time: 0.015) G_GAN: 0.675 G_GAN_Feat: 3.900 G_VGG: 3.855 D_real: 0.471 D_fake: 0.448 \n","(epoch: 14, iters: 560, time: 0.015) G_GAN: 0.779 G_GAN_Feat: 5.560 G_VGG: 5.762 D_real: 0.286 D_fake: 0.322 \n","(epoch: 14, iters: 760, time: 0.015) G_GAN: 0.908 G_GAN_Feat: 4.766 G_VGG: 3.950 D_real: 0.585 D_fake: 0.443 \n","saving the latest model (epoch 14, total_steps 20000)\n","(epoch: 14, iters: 960, time: 0.015) G_GAN: 0.559 G_GAN_Feat: 4.929 G_VGG: 5.116 D_real: 0.295 D_fake: 0.500 \n","(epoch: 14, iters: 1160, time: 0.015) G_GAN: 0.987 G_GAN_Feat: 4.203 G_VGG: 4.135 D_real: 0.885 D_fake: 0.217 \n","(epoch: 14, iters: 1360, time: 0.015) G_GAN: 0.882 G_GAN_Feat: 6.778 G_VGG: 5.142 D_real: 0.282 D_fake: 0.416 \n","End of epoch 14 / 200 \t Time Taken: 25 sec\n","(epoch: 15, iters: 80, time: 0.016) G_GAN: 0.771 G_GAN_Feat: 4.372 G_VGG: 4.635 D_real: 0.413 D_fake: 0.393 \n","(epoch: 15, iters: 280, time: 0.015) G_GAN: 0.513 G_GAN_Feat: 4.104 G_VGG: 3.578 D_real: 0.451 D_fake: 0.556 \n","saving the latest model (epoch 15, total_steps 21000)\n","(epoch: 15, iters: 480, time: 0.015) G_GAN: 0.810 G_GAN_Feat: 4.840 G_VGG: 4.563 D_real: 0.273 D_fake: 0.394 \n","(epoch: 15, iters: 680, time: 0.015) G_GAN: 0.522 G_GAN_Feat: 5.051 G_VGG: 4.247 D_real: 0.394 D_fake: 0.582 \n","(epoch: 15, iters: 880, time: 0.015) G_GAN: 1.016 G_GAN_Feat: 3.980 G_VGG: 4.072 D_real: 0.623 D_fake: 0.209 \n","(epoch: 15, iters: 1080, time: 0.015) G_GAN: 0.781 G_GAN_Feat: 3.918 G_VGG: 3.699 D_real: 0.543 D_fake: 0.343 \n","(epoch: 15, iters: 1280, time: 0.015) G_GAN: 0.879 G_GAN_Feat: 4.897 G_VGG: 4.496 D_real: 0.520 D_fake: 0.288 \n","saving the latest model (epoch 15, total_steps 22000)\n","(epoch: 15, iters: 1480, time: 0.015) G_GAN: 1.079 G_GAN_Feat: 5.404 G_VGG: 4.736 D_real: 0.431 D_fake: 0.244 \n","End of epoch 15 / 200 \t Time Taken: 28 sec\n","saving the model at the end of epoch 15, iters 22200\n","(epoch: 16, iters: 200, time: 0.016) G_GAN: 0.653 G_GAN_Feat: 4.381 G_VGG: 3.364 D_real: 0.331 D_fake: 0.446 \n","(epoch: 16, iters: 400, time: 0.015) G_GAN: 1.144 G_GAN_Feat: 5.038 G_VGG: 4.394 D_real: 0.567 D_fake: 0.153 \n","(epoch: 16, iters: 600, time: 0.015) G_GAN: 0.618 G_GAN_Feat: 4.373 G_VGG: 4.113 D_real: 0.393 D_fake: 0.541 \n","(epoch: 16, iters: 800, time: 0.015) G_GAN: 0.637 G_GAN_Feat: 5.402 G_VGG: 4.853 D_real: 0.351 D_fake: 0.451 \n","saving the latest model (epoch 16, total_steps 23000)\n","(epoch: 16, iters: 1000, time: 0.016) G_GAN: 0.725 G_GAN_Feat: 4.954 G_VGG: 4.657 D_real: 0.386 D_fake: 0.381 \n","(epoch: 16, iters: 1200, time: 0.015) G_GAN: 0.260 G_GAN_Feat: 4.887 G_VGG: 4.483 D_real: 0.130 D_fake: 0.950 \n","(epoch: 16, iters: 1400, time: 0.015) G_GAN: 0.738 G_GAN_Feat: 3.813 G_VGG: 3.500 D_real: 0.436 D_fake: 0.356 \n","End of epoch 16 / 200 \t Time Taken: 25 sec\n","(epoch: 17, iters: 120, time: 0.016) G_GAN: 0.424 G_GAN_Feat: 5.231 G_VGG: 5.590 D_real: 0.270 D_fake: 0.655 \n","(epoch: 17, iters: 320, time: 0.015) G_GAN: 1.071 G_GAN_Feat: 4.801 G_VGG: 5.060 D_real: 0.837 D_fake: 0.288 \n","saving the latest model (epoch 17, total_steps 24000)\n","(epoch: 17, iters: 520, time: 0.015) G_GAN: 0.321 G_GAN_Feat: 5.612 G_VGG: 4.861 D_real: 0.127 D_fake: 0.793 \n","(epoch: 17, iters: 720, time: 0.015) G_GAN: 0.724 G_GAN_Feat: 4.901 G_VGG: 5.130 D_real: 0.581 D_fake: 0.397 \n","(epoch: 17, iters: 920, time: 0.015) G_GAN: 0.833 G_GAN_Feat: 5.232 G_VGG: 5.107 D_real: 0.639 D_fake: 0.313 \n","(epoch: 17, iters: 1120, time: 0.015) G_GAN: 0.604 G_GAN_Feat: 4.327 G_VGG: 4.737 D_real: 0.460 D_fake: 0.449 \n","(epoch: 17, iters: 1320, time: 0.015) G_GAN: 0.760 G_GAN_Feat: 4.810 G_VGG: 4.614 D_real: 0.470 D_fake: 0.377 \n","saving the latest model (epoch 17, total_steps 25000)\n","End of epoch 17 / 200 \t Time Taken: 28 sec\n","(epoch: 18, iters: 40, time: 0.016) G_GAN: 0.694 G_GAN_Feat: 4.528 G_VGG: 3.701 D_real: 0.413 D_fake: 0.484 \n","(epoch: 18, iters: 240, time: 0.015) G_GAN: 0.938 G_GAN_Feat: 5.482 G_VGG: 4.709 D_real: 0.530 D_fake: 0.221 \n","(epoch: 18, iters: 440, time: 0.015) G_GAN: 0.993 G_GAN_Feat: 3.790 G_VGG: 4.102 D_real: 0.633 D_fake: 0.232 \n","(epoch: 18, iters: 640, time: 0.015) G_GAN: 0.638 G_GAN_Feat: 4.029 G_VGG: 4.081 D_real: 0.548 D_fake: 0.733 \n","(epoch: 18, iters: 840, time: 0.015) G_GAN: 0.962 G_GAN_Feat: 4.669 G_VGG: 4.637 D_real: 0.537 D_fake: 0.342 \n","saving the latest model (epoch 18, total_steps 26000)\n","(epoch: 18, iters: 1040, time: 0.015) G_GAN: 0.791 G_GAN_Feat: 4.569 G_VGG: 4.905 D_real: 0.404 D_fake: 0.351 \n","(epoch: 18, iters: 1240, time: 0.015) G_GAN: 0.795 G_GAN_Feat: 4.154 G_VGG: 4.777 D_real: 0.589 D_fake: 0.430 \n","(epoch: 18, iters: 1440, time: 0.015) G_GAN: 0.666 G_GAN_Feat: 4.726 G_VGG: 5.185 D_real: 0.291 D_fake: 0.581 \n","End of epoch 18 / 200 \t Time Taken: 25 sec\n","(epoch: 19, iters: 160, time: 0.016) G_GAN: 0.579 G_GAN_Feat: 4.672 G_VGG: 3.875 D_real: 0.262 D_fake: 0.480 \n","(epoch: 19, iters: 360, time: 0.015) G_GAN: 1.368 G_GAN_Feat: 4.857 G_VGG: 4.602 D_real: 1.013 D_fake: 0.153 \n","saving the latest model (epoch 19, total_steps 27000)\n","(epoch: 19, iters: 560, time: 0.016) G_GAN: 0.901 G_GAN_Feat: 5.455 G_VGG: 4.672 D_real: 0.385 D_fake: 0.251 \n","(epoch: 19, iters: 760, time: 0.015) G_GAN: 0.803 G_GAN_Feat: 4.383 G_VGG: 4.749 D_real: 0.460 D_fake: 0.321 \n","(epoch: 19, iters: 960, time: 0.015) G_GAN: 0.352 G_GAN_Feat: 5.258 G_VGG: 5.386 D_real: 0.282 D_fake: 0.839 \n","(epoch: 19, iters: 1160, time: 0.015) G_GAN: 0.827 G_GAN_Feat: 5.388 G_VGG: 5.217 D_real: 0.606 D_fake: 0.305 \n","(epoch: 19, iters: 1360, time: 0.015) G_GAN: 0.877 G_GAN_Feat: 4.780 G_VGG: 3.873 D_real: 0.548 D_fake: 0.296 \n","saving the latest model (epoch 19, total_steps 28000)\n","End of epoch 19 / 200 \t Time Taken: 28 sec\n","(epoch: 20, iters: 80, time: 0.016) G_GAN: 1.061 G_GAN_Feat: 4.737 G_VGG: 4.103 D_real: 0.722 D_fake: 0.199 \n","(epoch: 20, iters: 280, time: 0.015) G_GAN: 0.790 G_GAN_Feat: 4.973 G_VGG: 4.746 D_real: 0.405 D_fake: 0.323 \n","(epoch: 20, iters: 480, time: 0.015) G_GAN: 0.812 G_GAN_Feat: 5.352 G_VGG: 4.761 D_real: 0.218 D_fake: 0.299 \n","(epoch: 20, iters: 680, time: 0.015) G_GAN: 0.708 G_GAN_Feat: 5.058 G_VGG: 4.673 D_real: 0.322 D_fake: 0.407 \n","(epoch: 20, iters: 880, time: 0.015) G_GAN: 1.207 G_GAN_Feat: 4.627 G_VGG: 4.591 D_real: 0.760 D_fake: 0.169 \n","saving the latest model (epoch 20, total_steps 29000)\n","(epoch: 20, iters: 1080, time: 0.015) G_GAN: 0.526 G_GAN_Feat: 4.468 G_VGG: 4.242 D_real: 0.253 D_fake: 0.563 \n","(epoch: 20, iters: 1280, time: 0.015) G_GAN: 0.693 G_GAN_Feat: 5.135 G_VGG: 4.091 D_real: 0.301 D_fake: 0.423 \n","(epoch: 20, iters: 1480, time: 0.015) G_GAN: 1.205 G_GAN_Feat: 5.773 G_VGG: 5.283 D_real: 0.757 D_fake: 0.155 \n","End of epoch 20 / 200 \t Time Taken: 25 sec\n","saving the model at the end of epoch 20, iters 29600\n","(epoch: 21, iters: 200, time: 0.016) G_GAN: 1.135 G_GAN_Feat: 4.772 G_VGG: 4.086 D_real: 0.614 D_fake: 0.154 \n","(epoch: 21, iters: 400, time: 0.015) G_GAN: 1.781 G_GAN_Feat: 4.841 G_VGG: 5.023 D_real: 0.992 D_fake: 0.035 \n","saving the latest model (epoch 21, total_steps 30000)\n","(epoch: 21, iters: 600, time: 0.015) G_GAN: 1.456 G_GAN_Feat: 4.957 G_VGG: 4.629 D_real: 0.905 D_fake: 0.146 \n","(epoch: 21, iters: 800, time: 0.015) G_GAN: 0.910 G_GAN_Feat: 5.480 G_VGG: 4.450 D_real: 0.439 D_fake: 0.281 \n","(epoch: 21, iters: 1000, time: 0.015) G_GAN: 0.694 G_GAN_Feat: 5.038 G_VGG: 5.891 D_real: 0.357 D_fake: 0.430 \n","(epoch: 21, iters: 1200, time: 0.015) G_GAN: 0.588 G_GAN_Feat: 5.348 G_VGG: 4.175 D_real: 0.377 D_fake: 0.564 \n","(epoch: 21, iters: 1400, time: 0.015) G_GAN: 0.834 G_GAN_Feat: 5.261 G_VGG: 5.168 D_real: 0.623 D_fake: 0.355 \n","saving the latest model (epoch 21, total_steps 31000)\n","End of epoch 21 / 200 \t Time Taken: 28 sec\n","(epoch: 22, iters: 120, time: 0.016) G_GAN: 1.209 G_GAN_Feat: 4.381 G_VGG: 4.414 D_real: 0.848 D_fake: 0.154 \n","(epoch: 22, iters: 320, time: 0.015) G_GAN: 1.041 G_GAN_Feat: 3.639 G_VGG: 3.719 D_real: 0.771 D_fake: 0.461 \n","(epoch: 22, iters: 520, time: 0.015) G_GAN: 0.799 G_GAN_Feat: 3.962 G_VGG: 2.845 D_real: 0.537 D_fake: 0.365 \n","(epoch: 22, iters: 720, time: 0.015) G_GAN: 0.879 G_GAN_Feat: 5.122 G_VGG: 5.064 D_real: 0.815 D_fake: 0.270 \n","(epoch: 22, iters: 920, time: 0.015) G_GAN: 0.858 G_GAN_Feat: 4.632 G_VGG: 3.964 D_real: 0.490 D_fake: 0.322 \n","saving the latest model (epoch 22, total_steps 32000)\n","(epoch: 22, iters: 1120, time: 0.015) G_GAN: 1.099 G_GAN_Feat: 5.393 G_VGG: 5.408 D_real: 0.533 D_fake: 0.488 \n","(epoch: 22, iters: 1320, time: 0.015) G_GAN: 1.019 G_GAN_Feat: 5.196 G_VGG: 5.203 D_real: 0.438 D_fake: 0.239 \n","End of epoch 22 / 200 \t Time Taken: 26 sec\n","(epoch: 23, iters: 40, time: 0.016) G_GAN: 0.983 G_GAN_Feat: 5.047 G_VGG: 3.533 D_real: 0.309 D_fake: 0.233 \n","(epoch: 23, iters: 240, time: 0.015) G_GAN: 0.589 G_GAN_Feat: 4.593 G_VGG: 4.504 D_real: 0.256 D_fake: 0.461 \n","(epoch: 23, iters: 440, time: 0.015) G_GAN: 0.554 G_GAN_Feat: 6.123 G_VGG: 6.347 D_real: 0.394 D_fake: 0.506 \n","saving the latest model (epoch 23, total_steps 33000)\n","(epoch: 23, iters: 640, time: 0.015) G_GAN: 1.086 G_GAN_Feat: 5.285 G_VGG: 4.587 D_real: 0.634 D_fake: 0.329 \n","(epoch: 23, iters: 840, time: 0.015) G_GAN: 0.658 G_GAN_Feat: 5.254 G_VGG: 5.083 D_real: 0.434 D_fake: 0.440 \n","(epoch: 23, iters: 1040, time: 0.015) G_GAN: 0.518 G_GAN_Feat: 4.080 G_VGG: 3.916 D_real: 0.321 D_fake: 0.630 \n","(epoch: 23, iters: 1240, time: 0.015) G_GAN: 0.609 G_GAN_Feat: 4.136 G_VGG: 4.836 D_real: 0.340 D_fake: 0.477 \n","(epoch: 23, iters: 1440, time: 0.015) G_GAN: 0.622 G_GAN_Feat: 4.788 G_VGG: 5.163 D_real: 0.329 D_fake: 0.439 \n","saving the latest model (epoch 23, total_steps 34000)\n","End of epoch 23 / 200 \t Time Taken: 28 sec\n","(epoch: 24, iters: 160, time: 0.016) G_GAN: 0.651 G_GAN_Feat: 5.729 G_VGG: 5.072 D_real: 0.339 D_fake: 0.416 \n","(epoch: 24, iters: 360, time: 0.015) G_GAN: 0.694 G_GAN_Feat: 4.970 G_VGG: 4.766 D_real: 0.436 D_fake: 0.413 \n","(epoch: 24, iters: 560, time: 0.015) G_GAN: 0.541 G_GAN_Feat: 4.158 G_VGG: 3.959 D_real: 0.297 D_fake: 0.567 \n","(epoch: 24, iters: 760, time: 0.015) G_GAN: 1.223 G_GAN_Feat: 5.026 G_VGG: 5.181 D_real: 0.864 D_fake: 0.190 \n","(epoch: 24, iters: 960, time: 0.015) G_GAN: 0.685 G_GAN_Feat: 4.914 G_VGG: 5.276 D_real: 0.364 D_fake: 0.416 \n","saving the latest model (epoch 24, total_steps 35000)\n","(epoch: 24, iters: 1160, time: 0.015) G_GAN: 0.567 G_GAN_Feat: 4.274 G_VGG: 3.854 D_real: 0.352 D_fake: 0.568 \n","(epoch: 24, iters: 1360, time: 0.015) G_GAN: 1.124 G_GAN_Feat: 3.973 G_VGG: 3.834 D_real: 0.866 D_fake: 0.190 \n","End of epoch 24 / 200 \t Time Taken: 25 sec\n","(epoch: 25, iters: 80, time: 0.016) G_GAN: 1.054 G_GAN_Feat: 4.519 G_VGG: 4.970 D_real: 0.654 D_fake: 0.194 \n","(epoch: 25, iters: 280, time: 0.015) G_GAN: 0.515 G_GAN_Feat: 5.455 G_VGG: 5.045 D_real: 0.229 D_fake: 0.535 \n","(epoch: 25, iters: 480, time: 0.015) G_GAN: 0.771 G_GAN_Feat: 4.756 G_VGG: 4.193 D_real: 0.477 D_fake: 0.442 \n","saving the latest model (epoch 25, total_steps 36000)\n","(epoch: 25, iters: 680, time: 0.016) G_GAN: 0.917 G_GAN_Feat: 6.038 G_VGG: 5.454 D_real: 0.518 D_fake: 0.297 \n","(epoch: 25, iters: 880, time: 0.015) G_GAN: 0.731 G_GAN_Feat: 3.864 G_VGG: 4.009 D_real: 0.510 D_fake: 0.494 \n","(epoch: 25, iters: 1080, time: 0.015) G_GAN: 0.699 G_GAN_Feat: 5.940 G_VGG: 4.879 D_real: 0.587 D_fake: 0.486 \n","(epoch: 25, iters: 1280, time: 0.015) G_GAN: 1.206 G_GAN_Feat: 5.173 G_VGG: 3.743 D_real: 0.612 D_fake: 0.332 \n","(epoch: 25, iters: 1480, time: 0.015) G_GAN: 0.891 G_GAN_Feat: 4.786 G_VGG: 5.335 D_real: 0.456 D_fake: 0.309 \n","saving the latest model (epoch 25, total_steps 37000)\n","End of epoch 25 / 200 \t Time Taken: 28 sec\n","saving the model at the end of epoch 25, iters 37000\n","(epoch: 26, iters: 200, time: 0.016) G_GAN: 0.961 G_GAN_Feat: 4.258 G_VGG: 3.665 D_real: 0.625 D_fake: 0.292 \n","(epoch: 26, iters: 400, time: 0.015) G_GAN: 0.719 G_GAN_Feat: 3.903 G_VGG: 3.192 D_real: 0.394 D_fake: 0.382 \n","(epoch: 26, iters: 600, time: 0.015) G_GAN: 0.896 G_GAN_Feat: 4.878 G_VGG: 4.683 D_real: 0.705 D_fake: 0.477 \n","(epoch: 26, iters: 800, time: 0.015) G_GAN: 0.787 G_GAN_Feat: 4.083 G_VGG: 3.863 D_real: 0.424 D_fake: 0.391 \n","(epoch: 26, iters: 1000, time: 0.015) G_GAN: 0.821 G_GAN_Feat: 4.386 G_VGG: 4.474 D_real: 0.587 D_fake: 0.289 \n","saving the latest model (epoch 26, total_steps 38000)\n","(epoch: 26, iters: 1200, time: 0.016) G_GAN: 0.556 G_GAN_Feat: 5.490 G_VGG: 4.205 D_real: 0.186 D_fake: 0.505 \n","(epoch: 26, iters: 1400, time: 0.015) G_GAN: 0.790 G_GAN_Feat: 4.233 G_VGG: 4.049 D_real: 0.635 D_fake: 0.374 \n","End of epoch 26 / 200 \t Time Taken: 25 sec\n","(epoch: 27, iters: 120, time: 0.016) G_GAN: 0.539 G_GAN_Feat: 5.748 G_VGG: 4.606 D_real: 0.442 D_fake: 0.640 \n","(epoch: 27, iters: 320, time: 0.015) G_GAN: 0.853 G_GAN_Feat: 4.467 G_VGG: 3.792 D_real: 0.584 D_fake: 0.339 \n","(epoch: 27, iters: 520, time: 0.015) G_GAN: 1.626 G_GAN_Feat: 5.704 G_VGG: 6.033 D_real: 1.104 D_fake: 0.090 \n","saving the latest model (epoch 27, total_steps 39000)\n","(epoch: 27, iters: 720, time: 0.015) G_GAN: 0.677 G_GAN_Feat: 4.178 G_VGG: 3.731 D_real: 0.464 D_fake: 0.400 \n","(epoch: 27, iters: 920, time: 0.015) G_GAN: 0.736 G_GAN_Feat: 4.078 G_VGG: 3.300 D_real: 0.389 D_fake: 0.349 \n","(epoch: 27, iters: 1120, time: 0.015) G_GAN: 0.878 G_GAN_Feat: 4.723 G_VGG: 4.839 D_real: 0.529 D_fake: 0.303 \n","(epoch: 27, iters: 1320, time: 0.015) G_GAN: 0.581 G_GAN_Feat: 5.031 G_VGG: 4.339 D_real: 0.328 D_fake: 0.478 \n","End of epoch 27 / 200 \t Time Taken: 25 sec\n","(epoch: 28, iters: 40, time: 0.016) G_GAN: 0.749 G_GAN_Feat: 4.993 G_VGG: 4.762 D_real: 0.599 D_fake: 0.381 \n","saving the latest model (epoch 28, total_steps 40000)\n","(epoch: 28, iters: 240, time: 0.015) G_GAN: 0.720 G_GAN_Feat: 5.258 G_VGG: 5.150 D_real: 0.310 D_fake: 0.373 \n","(epoch: 28, iters: 440, time: 0.015) G_GAN: 0.601 G_GAN_Feat: 4.708 G_VGG: 3.575 D_real: 0.450 D_fake: 0.516 \n","(epoch: 28, iters: 640, time: 0.015) G_GAN: 0.769 G_GAN_Feat: 6.121 G_VGG: 5.581 D_real: 0.218 D_fake: 0.353 \n","(epoch: 28, iters: 840, time: 0.015) G_GAN: 0.761 G_GAN_Feat: 4.820 G_VGG: 3.676 D_real: 0.358 D_fake: 0.339 \n","(epoch: 28, iters: 1040, time: 0.015) G_GAN: 1.067 G_GAN_Feat: 4.923 G_VGG: 4.572 D_real: 0.588 D_fake: 0.189 \n","saving the latest model (epoch 28, total_steps 41000)\n","(epoch: 28, iters: 1240, time: 0.016) G_GAN: 0.914 G_GAN_Feat: 4.427 G_VGG: 3.828 D_real: 0.640 D_fake: 0.257 \n","(epoch: 28, iters: 1440, time: 0.015) G_GAN: 1.063 G_GAN_Feat: 5.364 G_VGG: 4.309 D_real: 0.534 D_fake: 0.215 \n","End of epoch 28 / 200 \t Time Taken: 28 sec\n","(epoch: 29, iters: 160, time: 0.016) G_GAN: 0.763 G_GAN_Feat: 5.159 G_VGG: 3.976 D_real: 0.350 D_fake: 0.341 \n","(epoch: 29, iters: 360, time: 0.015) G_GAN: 0.746 G_GAN_Feat: 5.915 G_VGG: 4.766 D_real: 0.320 D_fake: 0.407 \n","(epoch: 29, iters: 560, time: 0.015) G_GAN: 0.569 G_GAN_Feat: 5.325 G_VGG: 4.886 D_real: 0.240 D_fake: 0.493 \n","saving the latest model (epoch 29, total_steps 42000)\n","(epoch: 29, iters: 760, time: 0.016) G_GAN: 1.078 G_GAN_Feat: 6.173 G_VGG: 5.016 D_real: 0.607 D_fake: 0.216 \n","(epoch: 29, iters: 960, time: 0.015) G_GAN: 1.355 G_GAN_Feat: 4.347 G_VGG: 3.403 D_real: 0.969 D_fake: 0.097 \n","(epoch: 29, iters: 1160, time: 0.015) G_GAN: 0.764 G_GAN_Feat: 6.076 G_VGG: 5.466 D_real: 0.374 D_fake: 0.347 \n","(epoch: 29, iters: 1360, time: 0.015) G_GAN: 1.136 G_GAN_Feat: 5.401 G_VGG: 4.982 D_real: 0.596 D_fake: 0.203 \n","End of epoch 29 / 200 \t Time Taken: 26 sec\n","(epoch: 30, iters: 80, time: 0.016) G_GAN: 0.477 G_GAN_Feat: 3.759 G_VGG: 3.539 D_real: 0.389 D_fake: 0.594 \n","saving the latest model (epoch 30, total_steps 43000)\n","(epoch: 30, iters: 280, time: 0.016) G_GAN: 1.198 G_GAN_Feat: 3.896 G_VGG: 3.771 D_real: 0.835 D_fake: 0.238 \n","(epoch: 30, iters: 480, time: 0.015) G_GAN: 0.916 G_GAN_Feat: 4.660 G_VGG: 4.334 D_real: 0.428 D_fake: 0.248 \n","(epoch: 30, iters: 680, time: 0.015) G_GAN: 0.599 G_GAN_Feat: 5.015 G_VGG: 4.555 D_real: 0.309 D_fake: 0.494 \n","(epoch: 30, iters: 880, time: 0.015) G_GAN: 2.053 G_GAN_Feat: 5.708 G_VGG: 5.997 D_real: 1.309 D_fake: 0.093 \n","(epoch: 30, iters: 1080, time: 0.015) G_GAN: 0.509 G_GAN_Feat: 5.021 G_VGG: 4.447 D_real: 0.246 D_fake: 0.553 \n","saving the latest model (epoch 30, total_steps 44000)\n","(epoch: 30, iters: 1280, time: 0.015) G_GAN: 0.393 G_GAN_Feat: 4.631 G_VGG: 3.901 D_real: 0.306 D_fake: 0.796 \n","(epoch: 30, iters: 1480, time: 0.015) G_GAN: 0.406 G_GAN_Feat: 4.415 G_VGG: 4.175 D_real: 0.225 D_fake: 0.693 \n","End of epoch 30 / 200 \t Time Taken: 29 sec\n","saving the model at the end of epoch 30, iters 44400\n","(epoch: 31, iters: 200, time: 0.015) G_GAN: 0.346 G_GAN_Feat: 6.978 G_VGG: 5.782 D_real: 0.102 D_fake: 0.764 \n","(epoch: 31, iters: 400, time: 0.015) G_GAN: 0.666 G_GAN_Feat: 4.091 G_VGG: 3.628 D_real: 0.304 D_fake: 0.444 \n","(epoch: 31, iters: 600, time: 0.015) G_GAN: 0.957 G_GAN_Feat: 4.844 G_VGG: 4.708 D_real: 0.578 D_fake: 0.229 \n","saving the latest model (epoch 31, total_steps 45000)\n","(epoch: 31, iters: 800, time: 0.015) G_GAN: 0.838 G_GAN_Feat: 3.862 G_VGG: 3.837 D_real: 0.690 D_fake: 0.519 \n","(epoch: 31, iters: 1000, time: 0.015) G_GAN: 0.756 G_GAN_Feat: 5.882 G_VGG: 5.358 D_real: 0.319 D_fake: 0.341 \n","(epoch: 31, iters: 1200, time: 0.015) G_GAN: 0.624 G_GAN_Feat: 4.318 G_VGG: 3.661 D_real: 0.396 D_fake: 0.477 \n","(epoch: 31, iters: 1400, time: 0.015) G_GAN: 0.437 G_GAN_Feat: 4.405 G_VGG: 4.159 D_real: 0.235 D_fake: 0.618 \n","End of epoch 31 / 200 \t Time Taken: 25 sec\n","(epoch: 32, iters: 120, time: 0.016) G_GAN: 0.971 G_GAN_Feat: 4.952 G_VGG: 4.474 D_real: 0.587 D_fake: 0.259 \n","saving the latest model (epoch 32, total_steps 46000)\n","(epoch: 32, iters: 320, time: 0.015) G_GAN: 0.642 G_GAN_Feat: 4.803 G_VGG: 4.178 D_real: 0.342 D_fake: 0.418 \n","(epoch: 32, iters: 520, time: 0.015) G_GAN: 1.491 G_GAN_Feat: 5.395 G_VGG: 4.547 D_real: 0.888 D_fake: 0.081 \n","(epoch: 32, iters: 720, time: 0.015) G_GAN: 0.662 G_GAN_Feat: 4.416 G_VGG: 3.894 D_real: 0.320 D_fake: 0.425 \n","(epoch: 32, iters: 920, time: 0.015) G_GAN: 0.278 G_GAN_Feat: 5.924 G_VGG: 5.305 D_real: 0.176 D_fake: 0.935 \n","(epoch: 32, iters: 1120, time: 0.015) G_GAN: 0.869 G_GAN_Feat: 3.725 G_VGG: 2.834 D_real: 0.599 D_fake: 0.387 \n","saving the latest model (epoch 32, total_steps 47000)\n","(epoch: 32, iters: 1320, time: 0.016) G_GAN: 0.693 G_GAN_Feat: 3.956 G_VGG: 3.152 D_real: 0.441 D_fake: 0.408 \n","End of epoch 32 / 200 \t Time Taken: 29 sec\n","(epoch: 33, iters: 40, time: 0.016) G_GAN: 0.866 G_GAN_Feat: 4.895 G_VGG: 4.358 D_real: 0.515 D_fake: 0.289 \n","(epoch: 33, iters: 240, time: 0.015) G_GAN: 0.757 G_GAN_Feat: 6.543 G_VGG: 6.296 D_real: 0.290 D_fake: 0.359 \n","(epoch: 33, iters: 440, time: 0.015) G_GAN: 0.750 G_GAN_Feat: 4.727 G_VGG: 4.148 D_real: 0.500 D_fake: 0.365 \n","(epoch: 33, iters: 640, time: 0.015) G_GAN: 0.611 G_GAN_Feat: 3.970 G_VGG: 4.832 D_real: 0.411 D_fake: 0.577 \n","saving the latest model (epoch 33, total_steps 48000)\n","(epoch: 33, iters: 840, time: 0.015) G_GAN: 0.991 G_GAN_Feat: 4.741 G_VGG: 3.515 D_real: 0.390 D_fake: 0.201 \n","(epoch: 33, iters: 1040, time: 0.015) G_GAN: 0.693 G_GAN_Feat: 5.121 G_VGG: 4.442 D_real: 0.394 D_fake: 0.388 \n","(epoch: 33, iters: 1240, time: 0.015) G_GAN: 0.861 G_GAN_Feat: 4.574 G_VGG: 4.251 D_real: 0.534 D_fake: 0.302 \n","(epoch: 33, iters: 1440, time: 0.015) G_GAN: 0.516 G_GAN_Feat: 5.596 G_VGG: 5.507 D_real: 0.255 D_fake: 0.580 \n","End of epoch 33 / 200 \t Time Taken: 26 sec\n","(epoch: 34, iters: 160, time: 0.016) G_GAN: 0.553 G_GAN_Feat: 4.885 G_VGG: 4.339 D_real: 0.311 D_fake: 0.532 \n","saving the latest model (epoch 34, total_steps 49000)\n","(epoch: 34, iters: 360, time: 0.016) G_GAN: 0.781 G_GAN_Feat: 4.787 G_VGG: 4.241 D_real: 0.501 D_fake: 0.380 \n","(epoch: 34, iters: 560, time: 0.015) G_GAN: 0.624 G_GAN_Feat: 6.417 G_VGG: 5.804 D_real: 0.219 D_fake: 0.446 \n","(epoch: 34, iters: 760, time: 0.015) G_GAN: 1.171 G_GAN_Feat: 4.536 G_VGG: 4.084 D_real: 0.895 D_fake: 0.149 \n","(epoch: 34, iters: 960, time: 0.015) G_GAN: 1.076 G_GAN_Feat: 5.126 G_VGG: 4.346 D_real: 0.636 D_fake: 0.192 \n","(epoch: 34, iters: 1160, time: 0.015) G_GAN: 1.198 G_GAN_Feat: 4.949 G_VGG: 4.262 D_real: 0.646 D_fake: 0.139 \n","saving the latest model (epoch 34, total_steps 50000)\n","(epoch: 34, iters: 1360, time: 0.016) G_GAN: 1.044 G_GAN_Feat: 4.751 G_VGG: 4.424 D_real: 0.689 D_fake: 0.216 \n","End of epoch 34 / 200 \t Time Taken: 28 sec\n","(epoch: 35, iters: 80, time: 0.016) G_GAN: 1.115 G_GAN_Feat: 5.490 G_VGG: 4.322 D_real: 0.489 D_fake: 0.273 \n","(epoch: 35, iters: 280, time: 0.015) G_GAN: 0.703 G_GAN_Feat: 4.894 G_VGG: 4.170 D_real: 0.424 D_fake: 0.400 \n","(epoch: 35, iters: 480, time: 0.015) G_GAN: 0.898 G_GAN_Feat: 3.961 G_VGG: 3.887 D_real: 0.590 D_fake: 0.361 \n","(epoch: 35, iters: 680, time: 0.015) G_GAN: 0.910 G_GAN_Feat: 5.549 G_VGG: 4.946 D_real: 0.427 D_fake: 0.352 \n","saving the latest model (epoch 35, total_steps 51000)\n","(epoch: 35, iters: 880, time: 0.015) G_GAN: 1.185 G_GAN_Feat: 3.976 G_VGG: 3.562 D_real: 0.873 D_fake: 0.272 \n","(epoch: 35, iters: 1080, time: 0.015) G_GAN: 0.912 G_GAN_Feat: 5.283 G_VGG: 4.295 D_real: 0.472 D_fake: 0.252 \n","(epoch: 35, iters: 1280, time: 0.015) G_GAN: 1.098 G_GAN_Feat: 4.506 G_VGG: 4.455 D_real: 0.660 D_fake: 0.194 \n","(epoch: 35, iters: 1480, time: 0.015) G_GAN: 0.939 G_GAN_Feat: 5.170 G_VGG: 4.175 D_real: 0.540 D_fake: 0.293 \n","End of epoch 35 / 200 \t Time Taken: 25 sec\n","saving the model at the end of epoch 35, iters 51800\n","(epoch: 36, iters: 200, time: 0.016) G_GAN: 0.729 G_GAN_Feat: 5.318 G_VGG: 4.825 D_real: 0.482 D_fake: 0.422 \n","saving the latest model (epoch 36, total_steps 52000)\n","(epoch: 36, iters: 400, time: 0.015) G_GAN: 0.747 G_GAN_Feat: 4.408 G_VGG: 4.343 D_real: 0.460 D_fake: 0.364 \n","(epoch: 36, iters: 600, time: 0.015) G_GAN: 0.949 G_GAN_Feat: 6.056 G_VGG: 5.550 D_real: 0.363 D_fake: 0.262 \n","(epoch: 36, iters: 800, time: 0.015) G_GAN: 1.579 G_GAN_Feat: 6.517 G_VGG: 5.456 D_real: 0.711 D_fake: 0.082 \n","(epoch: 36, iters: 1000, time: 0.015) G_GAN: 0.915 G_GAN_Feat: 4.803 G_VGG: 3.912 D_real: 0.506 D_fake: 0.255 \n","(epoch: 36, iters: 1200, time: 0.015) G_GAN: 0.854 G_GAN_Feat: 4.492 G_VGG: 4.114 D_real: 0.546 D_fake: 0.311 \n","saving the latest model (epoch 36, total_steps 53000)\n","(epoch: 36, iters: 1400, time: 0.015) G_GAN: 0.494 G_GAN_Feat: 4.986 G_VGG: 4.451 D_real: 0.231 D_fake: 0.563 \n","End of epoch 36 / 200 \t Time Taken: 27 sec\n","(epoch: 37, iters: 120, time: 0.016) G_GAN: 0.753 G_GAN_Feat: 4.640 G_VGG: 3.905 D_real: 0.376 D_fake: 0.362 \n","(epoch: 37, iters: 320, time: 0.015) G_GAN: 0.721 G_GAN_Feat: 3.940 G_VGG: 3.209 D_real: 0.461 D_fake: 0.675 \n","(epoch: 37, iters: 520, time: 0.015) G_GAN: 0.980 G_GAN_Feat: 4.402 G_VGG: 3.763 D_real: 0.589 D_fake: 0.233 \n","(epoch: 37, iters: 720, time: 0.015) G_GAN: 0.623 G_GAN_Feat: 4.398 G_VGG: 4.069 D_real: 0.350 D_fake: 0.486 \n","saving the latest model (epoch 37, total_steps 54000)\n","(epoch: 37, iters: 920, time: 0.015) G_GAN: 0.984 G_GAN_Feat: 5.483 G_VGG: 4.956 D_real: 0.350 D_fake: 0.228 \n","(epoch: 37, iters: 1120, time: 0.015) G_GAN: 1.043 G_GAN_Feat: 3.706 G_VGG: 3.682 D_real: 0.716 D_fake: 0.253 \n","(epoch: 37, iters: 1320, time: 0.015) G_GAN: 0.974 G_GAN_Feat: 4.407 G_VGG: 3.845 D_real: 0.602 D_fake: 0.228 \n","End of epoch 37 / 200 \t Time Taken: 25 sec\n","(epoch: 38, iters: 40, time: 0.016) G_GAN: 0.957 G_GAN_Feat: 5.386 G_VGG: 5.155 D_real: 0.541 D_fake: 0.235 \n","(epoch: 38, iters: 240, time: 0.015) G_GAN: 0.410 G_GAN_Feat: 3.965 G_VGG: 3.541 D_real: 0.263 D_fake: 0.764 \n","saving the latest model (epoch 38, total_steps 55000)\n","(epoch: 38, iters: 440, time: 0.015) G_GAN: 0.773 G_GAN_Feat: 4.624 G_VGG: 4.211 D_real: 0.399 D_fake: 0.338 \n","(epoch: 38, iters: 640, time: 0.015) G_GAN: 0.611 G_GAN_Feat: 4.519 G_VGG: 3.871 D_real: 0.318 D_fake: 0.456 \n","(epoch: 38, iters: 840, time: 0.015) G_GAN: 1.059 G_GAN_Feat: 5.411 G_VGG: 4.536 D_real: 0.587 D_fake: 0.216 \n","(epoch: 38, iters: 1040, time: 0.015) G_GAN: 1.067 G_GAN_Feat: 5.156 G_VGG: 5.115 D_real: 0.664 D_fake: 0.206 \n","(epoch: 38, iters: 1240, time: 0.015) G_GAN: 0.507 G_GAN_Feat: 5.416 G_VGG: 4.547 D_real: 0.253 D_fake: 0.631 \n","saving the latest model (epoch 38, total_steps 56000)\n","(epoch: 38, iters: 1440, time: 0.015) G_GAN: 0.676 G_GAN_Feat: 4.930 G_VGG: 4.082 D_real: 0.328 D_fake: 0.481 \n","End of epoch 38 / 200 \t Time Taken: 28 sec\n","(epoch: 39, iters: 160, time: 0.016) G_GAN: 0.555 G_GAN_Feat: 5.427 G_VGG: 4.547 D_real: 0.245 D_fake: 0.531 \n","(epoch: 39, iters: 360, time: 0.015) G_GAN: 0.777 G_GAN_Feat: 3.555 G_VGG: 3.057 D_real: 0.560 D_fake: 0.362 \n","(epoch: 39, iters: 560, time: 0.015) G_GAN: 0.660 G_GAN_Feat: 3.645 G_VGG: 3.393 D_real: 0.438 D_fake: 0.455 \n","(epoch: 39, iters: 760, time: 0.015) G_GAN: 0.535 G_GAN_Feat: 4.426 G_VGG: 3.060 D_real: 0.279 D_fake: 0.539 \n","saving the latest model (epoch 39, total_steps 57000)\n","(epoch: 39, iters: 960, time: 0.016) G_GAN: 1.347 G_GAN_Feat: 6.137 G_VGG: 4.665 D_real: 0.548 D_fake: 0.116 \n","(epoch: 39, iters: 1160, time: 0.015) G_GAN: 0.591 G_GAN_Feat: 5.502 G_VGG: 4.221 D_real: 0.229 D_fake: 0.510 \n","(epoch: 39, iters: 1360, time: 0.015) G_GAN: 0.666 G_GAN_Feat: 5.668 G_VGG: 4.905 D_real: 0.301 D_fake: 0.503 \n","End of epoch 39 / 200 \t Time Taken: 25 sec\n","(epoch: 40, iters: 80, time: 0.016) G_GAN: 0.882 G_GAN_Feat: 4.502 G_VGG: 4.380 D_real: 0.532 D_fake: 0.285 \n","(epoch: 40, iters: 280, time: 0.015) G_GAN: 1.000 G_GAN_Feat: 5.787 G_VGG: 4.810 D_real: 0.487 D_fake: 0.285 \n","saving the latest model (epoch 40, total_steps 58000)\n","(epoch: 40, iters: 480, time: 0.016) G_GAN: 0.383 G_GAN_Feat: 4.534 G_VGG: 4.373 D_real: 0.240 D_fake: 0.706 \n","(epoch: 40, iters: 680, time: 0.015) G_GAN: 0.980 G_GAN_Feat: 5.474 G_VGG: 4.244 D_real: 0.360 D_fake: 0.259 \n","(epoch: 40, iters: 880, time: 0.015) G_GAN: 1.066 G_GAN_Feat: 5.278 G_VGG: 4.554 D_real: 0.608 D_fake: 0.197 \n","(epoch: 40, iters: 1080, time: 0.015) G_GAN: 0.891 G_GAN_Feat: 5.392 G_VGG: 4.837 D_real: 0.470 D_fake: 0.454 \n","(epoch: 40, iters: 1280, time: 0.015) G_GAN: 0.775 G_GAN_Feat: 4.100 G_VGG: 3.502 D_real: 0.573 D_fake: 0.344 \n","saving the latest model (epoch 40, total_steps 59000)\n","(epoch: 40, iters: 1480, time: 0.015) G_GAN: 0.739 G_GAN_Feat: 5.039 G_VGG: 3.781 D_real: 0.381 D_fake: 0.496 \n","End of epoch 40 / 200 \t Time Taken: 29 sec\n","saving the model at the end of epoch 40, iters 59200\n","(epoch: 41, iters: 200, time: 0.016) G_GAN: 1.541 G_GAN_Feat: 5.219 G_VGG: 3.958 D_real: 0.860 D_fake: 0.103 \n","(epoch: 41, iters: 400, time: 0.015) G_GAN: 0.664 G_GAN_Feat: 4.951 G_VGG: 3.719 D_real: 0.252 D_fake: 0.476 \n","(epoch: 41, iters: 600, time: 0.015) G_GAN: 0.329 G_GAN_Feat: 4.768 G_VGG: 3.827 D_real: 0.173 D_fake: 0.854 \n","(epoch: 41, iters: 800, time: 0.015) G_GAN: 1.312 G_GAN_Feat: 4.126 G_VGG: 4.076 D_real: 0.883 D_fake: 0.133 \n","saving the latest model (epoch 41, total_steps 60000)\n","(epoch: 41, iters: 1000, time: 0.015) G_GAN: 0.935 G_GAN_Feat: 4.457 G_VGG: 3.821 D_real: 0.405 D_fake: 0.280 \n","(epoch: 41, iters: 1200, time: 0.015) G_GAN: 1.025 G_GAN_Feat: 4.538 G_VGG: 4.314 D_real: 0.522 D_fake: 0.235 \n","(epoch: 41, iters: 1400, time: 0.015) G_GAN: 0.929 G_GAN_Feat: 5.046 G_VGG: 4.463 D_real: 0.417 D_fake: 0.287 \n","End of epoch 41 / 200 \t Time Taken: 25 sec\n","(epoch: 42, iters: 120, time: 0.016) G_GAN: 1.194 G_GAN_Feat: 4.023 G_VGG: 3.977 D_real: 0.851 D_fake: 0.150 \n","(epoch: 42, iters: 320, time: 0.015) G_GAN: 0.558 G_GAN_Feat: 5.163 G_VGG: 3.952 D_real: 0.273 D_fake: 0.562 \n","saving the latest model (epoch 42, total_steps 61000)\n","(epoch: 42, iters: 520, time: 0.015) G_GAN: 0.469 G_GAN_Feat: 4.754 G_VGG: 3.826 D_real: 0.298 D_fake: 0.668 \n","(epoch: 42, iters: 720, time: 0.015) G_GAN: 0.399 G_GAN_Feat: 4.656 G_VGG: 3.641 D_real: 0.177 D_fake: 0.664 \n","(epoch: 42, iters: 920, time: 0.015) G_GAN: 0.876 G_GAN_Feat: 4.903 G_VGG: 4.747 D_real: 0.445 D_fake: 0.327 \n","(epoch: 42, iters: 1120, time: 0.015) G_GAN: 0.637 G_GAN_Feat: 5.494 G_VGG: 5.422 D_real: 0.351 D_fake: 0.451 \n","(epoch: 42, iters: 1320, time: 0.015) G_GAN: 0.680 G_GAN_Feat: 3.773 G_VGG: 3.488 D_real: 0.367 D_fake: 0.390 \n","saving the latest model (epoch 42, total_steps 62000)\n","End of epoch 42 / 200 \t Time Taken: 28 sec\n","(epoch: 43, iters: 40, time: 0.016) G_GAN: 0.504 G_GAN_Feat: 5.151 G_VGG: 4.192 D_real: 0.240 D_fake: 0.630 \n","(epoch: 43, iters: 240, time: 0.015) G_GAN: 1.072 G_GAN_Feat: 4.223 G_VGG: 3.201 D_real: 0.628 D_fake: 0.205 \n","(epoch: 43, iters: 440, time: 0.015) G_GAN: 0.728 G_GAN_Feat: 4.666 G_VGG: 3.368 D_real: 0.272 D_fake: 0.356 \n","(epoch: 43, iters: 640, time: 0.015) G_GAN: 0.758 G_GAN_Feat: 4.695 G_VGG: 3.697 D_real: 0.347 D_fake: 0.359 \n","(epoch: 43, iters: 840, time: 0.015) G_GAN: 0.904 G_GAN_Feat: 5.139 G_VGG: 3.815 D_real: 0.435 D_fake: 0.328 \n","saving the latest model (epoch 43, total_steps 63000)\n","(epoch: 43, iters: 1040, time: 0.015) G_GAN: 0.760 G_GAN_Feat: 5.202 G_VGG: 4.458 D_real: 0.438 D_fake: 0.487 \n","(epoch: 43, iters: 1240, time: 0.015) G_GAN: 0.518 G_GAN_Feat: 4.566 G_VGG: 4.390 D_real: 0.256 D_fake: 0.554 \n","(epoch: 43, iters: 1440, time: 0.015) G_GAN: 0.728 G_GAN_Feat: 4.168 G_VGG: 3.726 D_real: 0.389 D_fake: 0.404 \n","End of epoch 43 / 200 \t Time Taken: 25 sec\n","(epoch: 44, iters: 160, time: 0.016) G_GAN: 1.067 G_GAN_Feat: 5.434 G_VGG: 3.105 D_real: 0.360 D_fake: 0.184 \n","(epoch: 44, iters: 360, time: 0.015) G_GAN: 0.394 G_GAN_Feat: 4.512 G_VGG: 4.170 D_real: 0.260 D_fake: 0.741 \n","saving the latest model (epoch 44, total_steps 64000)\n","(epoch: 44, iters: 560, time: 0.015) G_GAN: 0.916 G_GAN_Feat: 4.285 G_VGG: 3.752 D_real: 0.557 D_fake: 0.358 \n","(epoch: 44, iters: 760, time: 0.015) G_GAN: 0.918 G_GAN_Feat: 3.551 G_VGG: 3.013 D_real: 0.701 D_fake: 0.265 \n","(epoch: 44, iters: 960, time: 0.015) G_GAN: 1.277 G_GAN_Feat: 4.302 G_VGG: 3.343 D_real: 0.802 D_fake: 0.146 \n","(epoch: 44, iters: 1160, time: 0.015) G_GAN: 0.740 G_GAN_Feat: 4.136 G_VGG: 3.539 D_real: 0.465 D_fake: 0.463 \n","(epoch: 44, iters: 1360, time: 0.015) G_GAN: 0.944 G_GAN_Feat: 2.982 G_VGG: 2.686 D_real: 0.762 D_fake: 0.272 \n","saving the latest model (epoch 44, total_steps 65000)\n","End of epoch 44 / 200 \t Time Taken: 28 sec\n","(epoch: 45, iters: 80, time: 0.016) G_GAN: 1.007 G_GAN_Feat: 6.105 G_VGG: 4.400 D_real: 0.512 D_fake: 0.277 \n","(epoch: 45, iters: 280, time: 0.015) G_GAN: 0.719 G_GAN_Feat: 4.588 G_VGG: 3.709 D_real: 0.440 D_fake: 0.386 \n","(epoch: 45, iters: 480, time: 0.015) G_GAN: 0.862 G_GAN_Feat: 3.953 G_VGG: 3.499 D_real: 0.488 D_fake: 0.366 \n","(epoch: 45, iters: 680, time: 0.015) G_GAN: 1.215 G_GAN_Feat: 4.268 G_VGG: 4.163 D_real: 0.770 D_fake: 0.134 \n","(epoch: 45, iters: 880, time: 0.015) G_GAN: 0.665 G_GAN_Feat: 4.576 G_VGG: 4.118 D_real: 0.377 D_fake: 0.442 \n","saving the latest model (epoch 45, total_steps 66000)\n","(epoch: 45, iters: 1080, time: 0.016) G_GAN: 0.851 G_GAN_Feat: 5.183 G_VGG: 4.425 D_real: 0.395 D_fake: 0.287 \n","(epoch: 45, iters: 1280, time: 0.015) G_GAN: 0.517 G_GAN_Feat: 6.121 G_VGG: 4.874 D_real: 0.186 D_fake: 0.614 \n","(epoch: 45, iters: 1480, time: 0.015) G_GAN: 1.358 G_GAN_Feat: 5.224 G_VGG: 4.195 D_real: 0.641 D_fake: 0.150 \n","End of epoch 45 / 200 \t Time Taken: 25 sec\n","saving the model at the end of epoch 45, iters 66600\n","(epoch: 46, iters: 200, time: 0.016) G_GAN: 0.686 G_GAN_Feat: 4.019 G_VGG: 3.668 D_real: 0.387 D_fake: 0.377 \n","(epoch: 46, iters: 400, time: 0.015) G_GAN: 0.558 G_GAN_Feat: 4.535 G_VGG: 3.390 D_real: 0.296 D_fake: 0.498 \n","saving the latest model (epoch 46, total_steps 67000)\n","(epoch: 46, iters: 600, time: 0.016) G_GAN: 0.588 G_GAN_Feat: 5.360 G_VGG: 4.001 D_real: 0.239 D_fake: 0.523 \n","(epoch: 46, iters: 800, time: 0.015) G_GAN: 1.042 G_GAN_Feat: 4.503 G_VGG: 3.824 D_real: 0.578 D_fake: 0.262 \n","(epoch: 46, iters: 1000, time: 0.015) G_GAN: 0.787 G_GAN_Feat: 3.324 G_VGG: 3.453 D_real: 0.646 D_fake: 0.408 \n","(epoch: 46, iters: 1200, time: 0.015) G_GAN: 0.952 G_GAN_Feat: 4.938 G_VGG: 3.469 D_real: 0.486 D_fake: 0.316 \n","(epoch: 46, iters: 1400, time: 0.015) G_GAN: 0.991 G_GAN_Feat: 4.675 G_VGG: 4.551 D_real: 0.603 D_fake: 0.270 \n","saving the latest model (epoch 46, total_steps 68000)\n","End of epoch 46 / 200 \t Time Taken: 28 sec\n","(epoch: 47, iters: 120, time: 0.016) G_GAN: 0.574 G_GAN_Feat: 5.510 G_VGG: 4.669 D_real: 0.268 D_fake: 0.508 \n","(epoch: 47, iters: 320, time: 0.015) G_GAN: 0.528 G_GAN_Feat: 4.029 G_VGG: 3.152 D_real: 0.328 D_fake: 0.542 \n","(epoch: 47, iters: 520, time: 0.015) G_GAN: 0.721 G_GAN_Feat: 4.276 G_VGG: 3.166 D_real: 0.365 D_fake: 0.513 \n","(epoch: 47, iters: 720, time: 0.015) G_GAN: 0.469 G_GAN_Feat: 4.322 G_VGG: 3.699 D_real: 0.276 D_fake: 0.648 \n","(epoch: 47, iters: 920, time: 0.015) G_GAN: 0.928 G_GAN_Feat: 5.208 G_VGG: 4.114 D_real: 0.367 D_fake: 0.264 \n","saving the latest model (epoch 47, total_steps 69000)\n","(epoch: 47, iters: 1120, time: 0.016) G_GAN: 0.675 G_GAN_Feat: 5.180 G_VGG: 3.963 D_real: 0.268 D_fake: 0.457 \n","(epoch: 47, iters: 1320, time: 0.015) G_GAN: 1.002 G_GAN_Feat: 4.596 G_VGG: 4.167 D_real: 0.559 D_fake: 0.209 \n","End of epoch 47 / 200 \t Time Taken: 25 sec\n","(epoch: 48, iters: 40, time: 0.016) G_GAN: 0.883 G_GAN_Feat: 3.929 G_VGG: 3.911 D_real: 0.608 D_fake: 0.334 \n","(epoch: 48, iters: 240, time: 0.015) G_GAN: 0.788 G_GAN_Feat: 4.607 G_VGG: 3.863 D_real: 0.380 D_fake: 0.364 \n","(epoch: 48, iters: 440, time: 0.016) G_GAN: 0.727 G_GAN_Feat: 5.556 G_VGG: 4.881 D_real: 0.310 D_fake: 0.510 \n","saving the latest model (epoch 48, total_steps 70000)\n","(epoch: 48, iters: 640, time: 0.016) G_GAN: 1.598 G_GAN_Feat: 4.794 G_VGG: 4.503 D_real: 0.917 D_fake: 0.085 \n","(epoch: 48, iters: 840, time: 0.015) G_GAN: 1.344 G_GAN_Feat: 5.111 G_VGG: 4.133 D_real: 0.658 D_fake: 0.156 \n","(epoch: 48, iters: 1040, time: 0.015) G_GAN: 0.994 G_GAN_Feat: 4.783 G_VGG: 3.644 D_real: 0.549 D_fake: 0.211 \n","(epoch: 48, iters: 1240, time: 0.015) G_GAN: 0.498 G_GAN_Feat: 4.114 G_VGG: 3.748 D_real: 0.252 D_fake: 0.552 \n","(epoch: 48, iters: 1440, time: 0.015) G_GAN: 0.436 G_GAN_Feat: 4.121 G_VGG: 3.198 D_real: 0.191 D_fake: 0.664 \n","saving the latest model (epoch 48, total_steps 71000)\n","End of epoch 48 / 200 \t Time Taken: 28 sec\n","(epoch: 49, iters: 160, time: 0.016) G_GAN: 0.866 G_GAN_Feat: 4.844 G_VGG: 4.572 D_real: 0.458 D_fake: 0.328 \n","(epoch: 49, iters: 360, time: 0.015) G_GAN: 0.768 G_GAN_Feat: 4.759 G_VGG: 3.926 D_real: 0.293 D_fake: 0.409 \n","(epoch: 49, iters: 560, time: 0.015) G_GAN: 0.903 G_GAN_Feat: 5.348 G_VGG: 4.740 D_real: 0.476 D_fake: 0.300 \n","(epoch: 49, iters: 760, time: 0.015) G_GAN: 0.943 G_GAN_Feat: 5.050 G_VGG: 4.103 D_real: 0.399 D_fake: 0.238 \n","(epoch: 49, iters: 960, time: 0.015) G_GAN: 0.766 G_GAN_Feat: 4.633 G_VGG: 3.898 D_real: 0.386 D_fake: 0.372 \n","saving the latest model (epoch 49, total_steps 72000)\n","(epoch: 49, iters: 1160, time: 0.016) G_GAN: 0.784 G_GAN_Feat: 4.253 G_VGG: 3.930 D_real: 0.467 D_fake: 0.366 \n","(epoch: 49, iters: 1360, time: 0.015) G_GAN: 0.920 G_GAN_Feat: 5.515 G_VGG: 4.150 D_real: 0.510 D_fake: 0.324 \n","End of epoch 49 / 200 \t Time Taken: 25 sec\n","(epoch: 50, iters: 80, time: 0.016) G_GAN: 0.299 G_GAN_Feat: 3.872 G_VGG: 3.377 D_real: 0.151 D_fake: 0.814 \n","(epoch: 50, iters: 280, time: 0.015) G_GAN: 0.741 G_GAN_Feat: 3.901 G_VGG: 2.890 D_real: 0.448 D_fake: 0.367 \n","(epoch: 50, iters: 480, time: 0.015) G_GAN: 0.892 G_GAN_Feat: 5.061 G_VGG: 4.150 D_real: 0.441 D_fake: 0.307 \n","saving the latest model (epoch 50, total_steps 73000)\n","(epoch: 50, iters: 680, time: 0.016) G_GAN: 1.081 G_GAN_Feat: 5.867 G_VGG: 4.590 D_real: 0.460 D_fake: 0.248 \n","(epoch: 50, iters: 880, time: 0.015) G_GAN: 0.598 G_GAN_Feat: 4.726 G_VGG: 3.822 D_real: 0.338 D_fake: 0.551 \n","(epoch: 50, iters: 1080, time: 0.015) G_GAN: 0.989 G_GAN_Feat: 5.951 G_VGG: 4.660 D_real: 0.447 D_fake: 0.245 \n","(epoch: 50, iters: 1280, time: 0.015) G_GAN: 0.877 G_GAN_Feat: 4.396 G_VGG: 3.578 D_real: 0.426 D_fake: 0.363 \n","(epoch: 50, iters: 1480, time: 0.015) G_GAN: 0.713 G_GAN_Feat: 4.085 G_VGG: 3.146 D_real: 0.464 D_fake: 0.458 \n","saving the latest model (epoch 50, total_steps 74000)\n","End of epoch 50 / 200 \t Time Taken: 28 sec\n","saving the model at the end of epoch 50, iters 74000\n","(epoch: 51, iters: 200, time: 0.016) G_GAN: 1.385 G_GAN_Feat: 5.418 G_VGG: 4.597 D_real: 0.882 D_fake: 0.086 \n","(epoch: 51, iters: 400, time: 0.015) G_GAN: 0.940 G_GAN_Feat: 4.427 G_VGG: 3.636 D_real: 0.545 D_fake: 0.269 \n","(epoch: 51, iters: 600, time: 0.015) G_GAN: 0.861 G_GAN_Feat: 5.145 G_VGG: 3.989 D_real: 0.359 D_fake: 0.278 \n","(epoch: 51, iters: 800, time: 0.015) G_GAN: 0.737 G_GAN_Feat: 4.118 G_VGG: 3.255 D_real: 0.470 D_fake: 0.401 \n","(epoch: 51, iters: 1000, time: 0.015) G_GAN: 0.864 G_GAN_Feat: 3.396 G_VGG: 3.163 D_real: 0.596 D_fake: 0.367 \n","saving the latest model (epoch 51, total_steps 75000)\n","(epoch: 51, iters: 1200, time: 0.015) G_GAN: 0.499 G_GAN_Feat: 3.855 G_VGG: 3.177 D_real: 0.295 D_fake: 0.572 \n","(epoch: 51, iters: 1400, time: 0.015) G_GAN: 1.137 G_GAN_Feat: 4.463 G_VGG: 4.174 D_real: 0.824 D_fake: 0.728 \n","End of epoch 51 / 200 \t Time Taken: 25 sec\n","(epoch: 52, iters: 120, time: 0.016) G_GAN: 0.289 G_GAN_Feat: 4.417 G_VGG: 3.487 D_real: 0.123 D_fake: 0.837 \n","(epoch: 52, iters: 320, time: 0.015) G_GAN: 1.196 G_GAN_Feat: 4.658 G_VGG: 3.751 D_real: 0.674 D_fake: 0.164 \n","(epoch: 52, iters: 520, time: 0.015) G_GAN: 0.772 G_GAN_Feat: 4.160 G_VGG: 3.166 D_real: 0.401 D_fake: 0.325 \n","saving the latest model (epoch 52, total_steps 76000)\n","(epoch: 52, iters: 720, time: 0.016) G_GAN: 0.977 G_GAN_Feat: 3.760 G_VGG: 2.985 D_real: 0.668 D_fake: 0.284 \n","(epoch: 52, iters: 920, time: 0.015) G_GAN: 1.036 G_GAN_Feat: 3.153 G_VGG: 2.609 D_real: 0.789 D_fake: 0.391 \n","(epoch: 52, iters: 1120, time: 0.015) G_GAN: 0.634 G_GAN_Feat: 4.476 G_VGG: 4.098 D_real: 0.291 D_fake: 0.418 \n","(epoch: 52, iters: 1320, time: 0.015) G_GAN: 0.419 G_GAN_Feat: 4.319 G_VGG: 3.625 D_real: 0.215 D_fake: 0.696 \n","End of epoch 52 / 200 \t Time Taken: 25 sec\n","(epoch: 53, iters: 40, time: 0.016) G_GAN: 0.868 G_GAN_Feat: 4.342 G_VGG: 3.684 D_real: 0.519 D_fake: 0.400 \n","saving the latest model (epoch 53, total_steps 77000)\n","(epoch: 53, iters: 240, time: 0.015) G_GAN: 1.351 G_GAN_Feat: 4.639 G_VGG: 3.981 D_real: 0.718 D_fake: 0.119 \n","(epoch: 53, iters: 440, time: 0.015) G_GAN: 1.050 G_GAN_Feat: 6.493 G_VGG: 5.516 D_real: 0.448 D_fake: 0.276 \n","(epoch: 53, iters: 640, time: 0.015) G_GAN: 0.453 G_GAN_Feat: 3.369 G_VGG: 2.808 D_real: 0.253 D_fake: 0.609 \n","(epoch: 53, iters: 840, time: 0.015) G_GAN: 0.334 G_GAN_Feat: 5.091 G_VGG: 3.774 D_real: 0.147 D_fake: 0.826 \n","(epoch: 53, iters: 1040, time: 0.015) G_GAN: 0.893 G_GAN_Feat: 3.241 G_VGG: 2.727 D_real: 0.637 D_fake: 0.280 \n","saving the latest model (epoch 53, total_steps 78000)\n","(epoch: 53, iters: 1240, time: 0.015) G_GAN: 0.963 G_GAN_Feat: 4.123 G_VGG: 3.456 D_real: 0.506 D_fake: 0.242 \n","(epoch: 53, iters: 1440, time: 0.015) G_GAN: 1.226 G_GAN_Feat: 4.190 G_VGG: 2.918 D_real: 0.649 D_fake: 0.148 \n","End of epoch 53 / 200 \t Time Taken: 28 sec\n","(epoch: 54, iters: 160, time: 0.016) G_GAN: 1.000 G_GAN_Feat: 3.734 G_VGG: 3.109 D_real: 0.818 D_fake: 0.241 \n","(epoch: 54, iters: 360, time: 0.015) G_GAN: 1.667 G_GAN_Feat: 4.278 G_VGG: 2.970 D_real: 0.982 D_fake: 0.065 \n","(epoch: 54, iters: 560, time: 0.015) G_GAN: 0.946 G_GAN_Feat: 3.109 G_VGG: 2.501 D_real: 0.687 D_fake: 0.393 \n","saving the latest model (epoch 54, total_steps 79000)\n","(epoch: 54, iters: 760, time: 0.015) G_GAN: 0.578 G_GAN_Feat: 4.732 G_VGG: 3.694 D_real: 0.271 D_fake: 0.495 \n","(epoch: 54, iters: 960, time: 0.015) G_GAN: 1.818 G_GAN_Feat: 4.054 G_VGG: 3.423 D_real: 1.320 D_fake: 0.113 \n","(epoch: 54, iters: 1160, time: 0.015) G_GAN: 0.638 G_GAN_Feat: 4.487 G_VGG: 3.430 D_real: 0.320 D_fake: 0.444 \n","(epoch: 54, iters: 1360, time: 0.015) G_GAN: 1.067 G_GAN_Feat: 4.643 G_VGG: 3.844 D_real: 0.614 D_fake: 0.221 \n","End of epoch 54 / 200 \t Time Taken: 25 sec\n","(epoch: 55, iters: 80, time: 0.016) G_GAN: 1.020 G_GAN_Feat: 4.360 G_VGG: 3.833 D_real: 0.562 D_fake: 0.208 \n","saving the latest model (epoch 55, total_steps 80000)\n","(epoch: 55, iters: 280, time: 0.015) G_GAN: 0.482 G_GAN_Feat: 4.254 G_VGG: 3.018 D_real: 0.188 D_fake: 0.650 \n","(epoch: 55, iters: 480, time: 0.015) G_GAN: 1.267 G_GAN_Feat: 3.346 G_VGG: 2.936 D_real: 0.876 D_fake: 0.137 \n","(epoch: 55, iters: 680, time: 0.015) G_GAN: 0.293 G_GAN_Feat: 4.857 G_VGG: 4.019 D_real: 0.112 D_fake: 0.889 \n","(epoch: 55, iters: 880, time: 0.015) G_GAN: 0.503 G_GAN_Feat: 3.648 G_VGG: 3.168 D_real: 0.327 D_fake: 0.605 \n","(epoch: 55, iters: 1080, time: 0.015) G_GAN: 1.002 G_GAN_Feat: 5.227 G_VGG: 4.369 D_real: 0.492 D_fake: 0.233 \n","saving the latest model (epoch 55, total_steps 81000)\n","(epoch: 55, iters: 1280, time: 0.015) G_GAN: 0.554 G_GAN_Feat: 4.519 G_VGG: 4.046 D_real: 0.311 D_fake: 0.564 \n","(epoch: 55, iters: 1480, time: 0.015) G_GAN: 0.844 G_GAN_Feat: 4.495 G_VGG: 3.648 D_real: 0.395 D_fake: 0.293 \n","End of epoch 55 / 200 \t Time Taken: 28 sec\n","saving the model at the end of epoch 55, iters 81400\n","(epoch: 56, iters: 200, time: 0.016) G_GAN: 0.460 G_GAN_Feat: 3.976 G_VGG: 3.164 D_real: 0.214 D_fake: 0.601 \n","(epoch: 56, iters: 400, time: 0.015) G_GAN: 0.754 G_GAN_Feat: 3.870 G_VGG: 3.032 D_real: 0.433 D_fake: 0.457 \n","(epoch: 56, iters: 600, time: 0.015) G_GAN: 0.967 G_GAN_Feat: 3.234 G_VGG: 2.796 D_real: 0.667 D_fake: 0.239 \n","saving the latest model (epoch 56, total_steps 82000)\n","(epoch: 56, iters: 800, time: 0.015) G_GAN: 0.777 G_GAN_Feat: 3.687 G_VGG: 2.791 D_real: 0.422 D_fake: 0.341 \n","(epoch: 56, iters: 1000, time: 0.015) G_GAN: 0.886 G_GAN_Feat: 3.788 G_VGG: 2.982 D_real: 0.641 D_fake: 0.295 \n","(epoch: 56, iters: 1200, time: 0.015) G_GAN: 0.525 G_GAN_Feat: 4.808 G_VGG: 3.603 D_real: 0.263 D_fake: 0.567 \n","(epoch: 56, iters: 1400, time: 0.015) G_GAN: 0.557 G_GAN_Feat: 6.782 G_VGG: 4.755 D_real: 0.192 D_fake: 0.648 \n","End of epoch 56 / 200 \t Time Taken: 26 sec\n","(epoch: 57, iters: 120, time: 0.016) G_GAN: 0.763 G_GAN_Feat: 3.958 G_VGG: 2.970 D_real: 0.348 D_fake: 0.365 \n","saving the latest model (epoch 57, total_steps 83000)\n","(epoch: 57, iters: 320, time: 0.016) G_GAN: 0.922 G_GAN_Feat: 5.456 G_VGG: 4.061 D_real: 0.382 D_fake: 0.252 \n","(epoch: 57, iters: 520, time: 0.015) G_GAN: 0.581 G_GAN_Feat: 4.918 G_VGG: 3.506 D_real: 0.234 D_fake: 0.524 \n","(epoch: 57, iters: 720, time: 0.015) G_GAN: 0.796 G_GAN_Feat: 4.849 G_VGG: 4.395 D_real: 0.433 D_fake: 0.401 \n","(epoch: 57, iters: 920, time: 0.015) G_GAN: 0.959 G_GAN_Feat: 4.401 G_VGG: 3.909 D_real: 0.513 D_fake: 0.306 \n","(epoch: 57, iters: 1120, time: 0.015) G_GAN: 1.471 G_GAN_Feat: 4.351 G_VGG: 2.737 D_real: 0.697 D_fake: 0.088 \n","saving the latest model (epoch 57, total_steps 84000)\n","(epoch: 57, iters: 1320, time: 0.016) G_GAN: 1.588 G_GAN_Feat: 4.632 G_VGG: 3.345 D_real: 1.023 D_fake: 0.308 \n","End of epoch 57 / 200 \t Time Taken: 28 sec\n","(epoch: 58, iters: 40, time: 0.016) G_GAN: 0.710 G_GAN_Feat: 3.518 G_VGG: 3.021 D_real: 0.454 D_fake: 0.422 \n","(epoch: 58, iters: 240, time: 0.015) G_GAN: 0.642 G_GAN_Feat: 4.020 G_VGG: 3.656 D_real: 0.316 D_fake: 0.449 \n","(epoch: 58, iters: 440, time: 0.015) G_GAN: 1.349 G_GAN_Feat: 5.217 G_VGG: 4.401 D_real: 0.728 D_fake: 0.106 \n","(epoch: 58, iters: 640, time: 0.015) G_GAN: 0.813 G_GAN_Feat: 3.859 G_VGG: 3.476 D_real: 0.509 D_fake: 0.315 \n","saving the latest model (epoch 58, total_steps 85000)\n","(epoch: 58, iters: 840, time: 0.015) G_GAN: 0.685 G_GAN_Feat: 3.982 G_VGG: 2.898 D_real: 0.324 D_fake: 0.430 \n","(epoch: 58, iters: 1040, time: 0.015) G_GAN: 0.869 G_GAN_Feat: 4.839 G_VGG: 3.433 D_real: 0.364 D_fake: 0.323 \n","(epoch: 58, iters: 1240, time: 0.015) G_GAN: 1.229 G_GAN_Feat: 5.001 G_VGG: 4.168 D_real: 0.715 D_fake: 0.182 \n","(epoch: 58, iters: 1440, time: 0.015) G_GAN: 0.874 G_GAN_Feat: 3.646 G_VGG: 2.351 D_real: 0.386 D_fake: 0.272 \n","End of epoch 58 / 200 \t Time Taken: 25 sec\n","(epoch: 59, iters: 160, time: 0.016) G_GAN: 1.038 G_GAN_Feat: 6.379 G_VGG: 3.642 D_real: 0.136 D_fake: 0.211 \n","saving the latest model (epoch 59, total_steps 86000)\n","(epoch: 59, iters: 360, time: 0.015) G_GAN: 0.445 G_GAN_Feat: 4.607 G_VGG: 3.519 D_real: 0.229 D_fake: 0.690 \n","(epoch: 59, iters: 560, time: 0.015) G_GAN: 0.527 G_GAN_Feat: 3.815 G_VGG: 2.676 D_real: 0.286 D_fake: 0.584 \n","(epoch: 59, iters: 760, time: 0.015) G_GAN: 0.770 G_GAN_Feat: 4.685 G_VGG: 4.222 D_real: 0.467 D_fake: 0.509 \n","(epoch: 59, iters: 960, time: 0.015) G_GAN: 0.645 G_GAN_Feat: 3.686 G_VGG: 3.550 D_real: 0.491 D_fake: 0.711 \n","(epoch: 59, iters: 1160, time: 0.015) G_GAN: 0.907 G_GAN_Feat: 3.289 G_VGG: 2.810 D_real: 0.614 D_fake: 0.257 \n","saving the latest model (epoch 59, total_steps 87000)\n","(epoch: 59, iters: 1360, time: 0.016) G_GAN: 1.013 G_GAN_Feat: 3.938 G_VGG: 3.314 D_real: 0.729 D_fake: 0.230 \n","End of epoch 59 / 200 \t Time Taken: 28 sec\n","(epoch: 60, iters: 80, time: 0.016) G_GAN: 0.665 G_GAN_Feat: 3.867 G_VGG: 3.309 D_real: 0.390 D_fake: 0.434 \n","(epoch: 60, iters: 280, time: 0.015) G_GAN: 0.685 G_GAN_Feat: 3.267 G_VGG: 2.917 D_real: 0.457 D_fake: 0.377 \n","(epoch: 60, iters: 480, time: 0.015) G_GAN: 0.923 G_GAN_Feat: 5.037 G_VGG: 3.581 D_real: 0.421 D_fake: 0.275 \n","(epoch: 60, iters: 680, time: 0.015) G_GAN: 1.060 G_GAN_Feat: 3.515 G_VGG: 2.674 D_real: 0.759 D_fake: 0.202 \n","saving the latest model (epoch 60, total_steps 88000)\n","(epoch: 60, iters: 880, time: 0.016) G_GAN: 1.904 G_GAN_Feat: 5.524 G_VGG: 4.793 D_real: 1.100 D_fake: 0.156 \n","(epoch: 60, iters: 1080, time: 0.015) G_GAN: 0.824 G_GAN_Feat: 3.981 G_VGG: 3.066 D_real: 0.575 D_fake: 0.293 \n","(epoch: 60, iters: 1280, time: 0.015) G_GAN: 1.122 G_GAN_Feat: 3.611 G_VGG: 2.602 D_real: 0.717 D_fake: 0.164 \n","(epoch: 60, iters: 1480, time: 0.015) G_GAN: 0.525 G_GAN_Feat: 4.460 G_VGG: 3.907 D_real: 0.267 D_fake: 0.534 \n","End of epoch 60 / 200 \t Time Taken: 25 sec\n","saving the model at the end of epoch 60, iters 88800\n","(epoch: 61, iters: 200, time: 0.015) G_GAN: 0.521 G_GAN_Feat: 4.087 G_VGG: 3.110 D_real: 0.226 D_fake: 0.569 \n","saving the latest model (epoch 61, total_steps 89000)\n","(epoch: 61, iters: 400, time: 0.015) G_GAN: 0.932 G_GAN_Feat: 3.884 G_VGG: 3.529 D_real: 0.679 D_fake: 0.267 \n","(epoch: 61, iters: 600, time: 0.015) G_GAN: 0.764 G_GAN_Feat: 2.865 G_VGG: 2.123 D_real: 0.554 D_fake: 0.331 \n","(epoch: 61, iters: 800, time: 0.015) G_GAN: 0.929 G_GAN_Feat: 4.576 G_VGG: 3.015 D_real: 0.519 D_fake: 0.270 \n","(epoch: 61, iters: 1000, time: 0.015) G_GAN: 0.744 G_GAN_Feat: 4.893 G_VGG: 4.432 D_real: 0.386 D_fake: 0.392 \n","(epoch: 61, iters: 1200, time: 0.015) G_GAN: 0.905 G_GAN_Feat: 3.182 G_VGG: 2.781 D_real: 0.677 D_fake: 0.275 \n","saving the latest model (epoch 61, total_steps 90000)\n","(epoch: 61, iters: 1400, time: 0.015) G_GAN: 1.815 G_GAN_Feat: 5.617 G_VGG: 4.593 D_real: 0.925 D_fake: 0.105 \n","End of epoch 61 / 200 \t Time Taken: 28 sec\n","(epoch: 62, iters: 120, time: 0.016) G_GAN: 0.278 G_GAN_Feat: 4.634 G_VGG: 3.807 D_real: 0.107 D_fake: 0.857 \n","(epoch: 62, iters: 320, time: 0.015) G_GAN: 0.313 G_GAN_Feat: 3.703 G_VGG: 2.962 D_real: 0.154 D_fake: 0.851 \n","(epoch: 62, iters: 520, time: 0.015) G_GAN: 1.337 G_GAN_Feat: 4.095 G_VGG: 3.331 D_real: 0.926 D_fake: 0.126 \n","(epoch: 62, iters: 720, time: 0.015) G_GAN: 0.328 G_GAN_Feat: 6.572 G_VGG: 4.479 D_real: 0.133 D_fake: 0.833 \n","saving the latest model (epoch 62, total_steps 91000)\n","(epoch: 62, iters: 920, time: 0.016) G_GAN: 0.911 G_GAN_Feat: 3.914 G_VGG: 3.186 D_real: 0.504 D_fake: 0.285 \n","(epoch: 62, iters: 1120, time: 0.015) G_GAN: 0.620 G_GAN_Feat: 3.824 G_VGG: 3.230 D_real: 0.393 D_fake: 0.499 \n","(epoch: 62, iters: 1320, time: 0.015) G_GAN: 0.662 G_GAN_Feat: 4.065 G_VGG: 3.492 D_real: 0.372 D_fake: 0.442 \n","End of epoch 62 / 200 \t Time Taken: 25 sec\n","(epoch: 63, iters: 40, time: 0.016) G_GAN: 0.492 G_GAN_Feat: 4.005 G_VGG: 3.105 D_real: 0.253 D_fake: 0.599 \n","(epoch: 63, iters: 240, time: 0.015) G_GAN: 0.593 G_GAN_Feat: 4.111 G_VGG: 3.745 D_real: 0.402 D_fake: 0.511 \n","saving the latest model (epoch 63, total_steps 92000)\n","(epoch: 63, iters: 440, time: 0.016) G_GAN: 0.608 G_GAN_Feat: 5.213 G_VGG: 4.080 D_real: 0.334 D_fake: 0.674 \n","(epoch: 63, iters: 640, time: 0.015) G_GAN: 0.222 G_GAN_Feat: 3.643 G_VGG: 3.054 D_real: 0.093 D_fake: 1.013 \n","(epoch: 63, iters: 840, time: 0.015) G_GAN: 1.163 G_GAN_Feat: 5.705 G_VGG: 4.189 D_real: 0.569 D_fake: 0.416 \n","(epoch: 63, iters: 1040, time: 0.015) G_GAN: 1.247 G_GAN_Feat: 4.093 G_VGG: 3.625 D_real: 0.743 D_fake: 0.162 \n","(epoch: 63, iters: 1240, time: 0.015) G_GAN: 0.874 G_GAN_Feat: 3.680 G_VGG: 2.942 D_real: 0.456 D_fake: 0.323 \n","saving the latest model (epoch 63, total_steps 93000)\n","(epoch: 63, iters: 1440, time: 0.016) G_GAN: 0.800 G_GAN_Feat: 4.353 G_VGG: 3.620 D_real: 0.459 D_fake: 0.322 \n","End of epoch 63 / 200 \t Time Taken: 28 sec\n","(epoch: 64, iters: 160, time: 0.016) G_GAN: 0.683 G_GAN_Feat: 5.928 G_VGG: 4.402 D_real: 0.284 D_fake: 0.391 \n","(epoch: 64, iters: 360, time: 0.015) G_GAN: 1.016 G_GAN_Feat: 4.654 G_VGG: 3.132 D_real: 0.536 D_fake: 0.234 \n","(epoch: 64, iters: 560, time: 0.015) G_GAN: 0.657 G_GAN_Feat: 2.437 G_VGG: 2.109 D_real: 0.510 D_fake: 0.409 \n","(epoch: 64, iters: 760, time: 0.015) G_GAN: 0.826 G_GAN_Feat: 3.769 G_VGG: 3.119 D_real: 0.450 D_fake: 0.343 \n","saving the latest model (epoch 64, total_steps 94000)\n","(epoch: 64, iters: 960, time: 0.015) G_GAN: 1.101 G_GAN_Feat: 4.247 G_VGG: 2.752 D_real: 0.527 D_fake: 0.222 \n","(epoch: 64, iters: 1160, time: 0.015) G_GAN: 1.148 G_GAN_Feat: 4.275 G_VGG: 3.616 D_real: 0.687 D_fake: 0.163 \n","(epoch: 64, iters: 1360, time: 0.015) G_GAN: 1.391 G_GAN_Feat: 3.801 G_VGG: 3.340 D_real: 0.864 D_fake: 0.171 \n","End of epoch 64 / 200 \t Time Taken: 25 sec\n","(epoch: 65, iters: 80, time: 0.016) G_GAN: 0.966 G_GAN_Feat: 5.257 G_VGG: 3.719 D_real: 0.458 D_fake: 0.264 \n","(epoch: 65, iters: 280, time: 0.015) G_GAN: 0.892 G_GAN_Feat: 5.421 G_VGG: 3.707 D_real: 0.501 D_fake: 0.454 \n","saving the latest model (epoch 65, total_steps 95000)\n","(epoch: 65, iters: 480, time: 0.016) G_GAN: 0.863 G_GAN_Feat: 4.045 G_VGG: 2.691 D_real: 0.472 D_fake: 0.284 \n","(epoch: 65, iters: 680, time: 0.015) G_GAN: 1.147 G_GAN_Feat: 3.511 G_VGG: 3.010 D_real: 0.767 D_fake: 0.174 \n","(epoch: 65, iters: 880, time: 0.015) G_GAN: 1.026 G_GAN_Feat: 2.986 G_VGG: 2.327 D_real: 0.708 D_fake: 0.221 \n","(epoch: 65, iters: 1080, time: 0.015) G_GAN: 0.992 G_GAN_Feat: 3.934 G_VGG: 3.253 D_real: 0.689 D_fake: 0.320 \n","(epoch: 65, iters: 1280, time: 0.015) G_GAN: 0.729 G_GAN_Feat: 3.790 G_VGG: 3.215 D_real: 0.512 D_fake: 0.382 \n","saving the latest model (epoch 65, total_steps 96000)\n","(epoch: 65, iters: 1480, time: 0.015) G_GAN: 1.301 G_GAN_Feat: 4.941 G_VGG: 3.882 D_real: 0.583 D_fake: 0.136 \n","End of epoch 65 / 200 \t Time Taken: 28 sec\n","saving the model at the end of epoch 65, iters 96200\n","(epoch: 66, iters: 200, time: 0.016) G_GAN: 0.637 G_GAN_Feat: 4.757 G_VGG: 3.803 D_real: 0.290 D_fake: 0.507 \n","(epoch: 66, iters: 400, time: 0.015) G_GAN: 0.746 G_GAN_Feat: 3.483 G_VGG: 2.051 D_real: 0.419 D_fake: 0.357 \n"]}]},{"cell_type":"code","source":["import os, shutil\n","\n","root = '/content/pix2pixHD/datasets/yalihouse_hd/'\n","os.makedirs(root + 'test_A', exist_ok=True)\n","os.makedirs(root + 'test_B', exist_ok=True)\n","\n","# Copy files (overwrite if already exists)\n","for fname in os.listdir(root + 'val_A'):\n","    shutil.copy(os.path.join(root + 'val_A', fname), os.path.join(root + 'test_A', fname))\n","for fname in os.listdir(root + 'val_B'):\n","    shutil.copy(os.path.join(root + 'val_B', fname), os.path.join(root + 'test_B', fname))\n","\n","print(\"✅ val_A/B copied to test_A/B\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vUr6cvvVabyY","executionInfo":{"status":"ok","timestamp":1749831993852,"user_tz":-180,"elapsed":47,"user":{"displayName":"Biçem Kaya","userId":"05518121626579968437"}},"outputId":"8fcd8782-5f51-47af-9db1-0909aff4cf31"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["✅ val_A/B copied to test_A/B\n"]}]},{"cell_type":"code","source":["!python test.py --name yalihouse_hd \\\n","  --dataroot datasets/yalihouse_hd \\\n","  --label_nc 0 \\\n","  --no_instance \\\n","  --resize_or_crop none \\\n","  --how_many 50\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AdQQsHyGvWXi","executionInfo":{"status":"ok","timestamp":1749832005866,"user_tz":-180,"elapsed":9392,"user":{"displayName":"Biçem Kaya","userId":"05518121626579968437"}},"outputId":"c72cb35a-9e42-46c5-e3ad-93bd0ac3a22f","collapsed":true},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["------------ Options -------------\n","aspect_ratio: 1.0\n","batchSize: 1\n","checkpoints_dir: ./checkpoints\n","cluster_path: features_clustered_010.npy\n","data_type: 32\n","dataroot: datasets/yalihouse_hd\n","display_winsize: 512\n","engine: None\n","export_onnx: None\n","feat_num: 3\n","fineSize: 512\n","fp16: False\n","gpu_ids: [0]\n","how_many: 50\n","input_nc: 3\n","instance_feat: False\n","isTrain: False\n","label_feat: False\n","label_nc: 0\n","loadSize: 1024\n","load_features: False\n","local_rank: 0\n","max_dataset_size: inf\n","model: pix2pixHD\n","nThreads: 2\n","n_blocks_global: 9\n","n_blocks_local: 3\n","n_clusters: 10\n","n_downsample_E: 4\n","n_downsample_global: 4\n","n_local_enhancers: 1\n","name: yalihouse_hd\n","nef: 16\n","netG: global\n","ngf: 64\n","niter_fix_global: 0\n","no_flip: False\n","no_instance: True\n","norm: instance\n","ntest: inf\n","onnx: None\n","output_nc: 3\n","phase: test\n","resize_or_crop: none\n","results_dir: ./results/\n","serial_batches: False\n","tf_log: False\n","use_dropout: False\n","use_encoded_image: False\n","verbose: False\n","which_epoch: latest\n","-------------- End ----------------\n","CustomDatasetDataLoader\n","dataset [AlignedDataset] was created\n","GlobalGenerator(\n","  (model): Sequential(\n","    (0): ReflectionPad2d((3, 3, 3, 3))\n","    (1): Conv2d(3, 64, kernel_size=(7, 7), stride=(1, 1))\n","    (2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (3): ReLU(inplace=True)\n","    (4): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","    (5): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (6): ReLU(inplace=True)\n","    (7): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","    (8): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (9): ReLU(inplace=True)\n","    (10): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","    (11): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (12): ReLU(inplace=True)\n","    (13): Conv2d(512, 1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))\n","    (14): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (15): ReLU(inplace=True)\n","    (16): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (17): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (18): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (19): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (20): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (21): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (22): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (23): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (24): ResnetBlock(\n","      (conv_block): Sequential(\n","        (0): ReflectionPad2d((1, 1, 1, 1))\n","        (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (2): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","        (3): ReLU(inplace=True)\n","        (4): ReflectionPad2d((1, 1, 1, 1))\n","        (5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))\n","        (6): InstanceNorm2d(1024, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","      )\n","    )\n","    (25): ConvTranspose2d(1024, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n","    (26): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (27): ReLU(inplace=True)\n","    (28): ConvTranspose2d(512, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n","    (29): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (30): ReLU(inplace=True)\n","    (31): ConvTranspose2d(256, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n","    (32): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (33): ReLU(inplace=True)\n","    (34): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n","    (35): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)\n","    (36): ReLU(inplace=True)\n","    (37): ReflectionPad2d((3, 3, 3, 3))\n","    (38): Conv2d(64, 3, kernel_size=(7, 7), stride=(1, 1))\n","    (39): Tanh()\n","  )\n",")\n","./checkpoints/yalihouse_hd/latest_net_G.pth not exists yet!\n","Traceback (most recent call last):\n","  File \"/content/pix2pixHD/test.py\", line 27, in <module>\n","    model = create_model(opt)\n","            ^^^^^^^^^^^^^^^^^\n","  File \"/content/pix2pixHD/models/models.py\", line 13, in create_model\n","    model.initialize(opt)\n","  File \"/content/pix2pixHD/models/pix2pixHD_model.py\", line 58, in initialize\n","    self.load_network(self.netG, 'G', opt.which_epoch, pretrained_path)            \n","    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","  File \"/content/pix2pixHD/models/base_model.py\", line 58, in load_network\n","    raise('Generator must exist!')\n","TypeError: exceptions must derive from BaseException\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import cv2\n","import os\n","\n","result_dir = '/content/pix2pixHD/results/yalihouse_hd/test_latest/images'\n","files = sorted([f for f in os.listdir(result_dir) if 'synthesized_image' in f])[:5]\n","\n","def find_img(base, suffix):\n","    for ext in ['.jpg', '.jpeg', '.png']:\n","        fname = base + suffix + ext\n","        fpath = os.path.join(result_dir, fname)\n","        if os.path.exists(fpath):\n","            return fpath\n","    return None\n","\n","for synth_name in files:\n","    # Remove either .jpg or .png from the synthesized image name to get the base\n","    if synth_name.endswith('.jpg'):\n","        base = synth_name.replace('_synthesized_image.jpg', '')\n","    elif synth_name.endswith('.png'):\n","        base = synth_name.replace('_synthesized_image.png', '')\n","    else:\n","        continue\n","\n","    input_path = find_img(base, '_input_label')\n","    synth_path = os.path.join(result_dir, synth_name)\n","\n","    if not (input_path and os.path.exists(synth_path)):\n","        print(f\"Skipping {base}: one or more files missing.\")\n","        continue\n","\n","    img_input = cv2.imread(input_path)\n","    img_synth = cv2.imread(synth_path)\n","\n","    if img_input is None or img_synth is None:\n","        print(f\"Skipping {base}: could not load one or more images.\")\n","        continue\n","\n","    fig, axs = plt.subplots(1, 2, figsize=(8, 4))\n","    axs[0].imshow(cv2.cvtColor(img_input, cv2.COLOR_BGR2RGB)); axs[0].set_title('Input Mask')\n","    axs[1].imshow(cv2.cvtColor(img_synth, cv2.COLOR_BGR2RGB)); axs[1].set_title('Generated Facade')\n","    for ax in axs: ax.axis('off')\n","    plt.show()\n"],"metadata":{"id":"MUwY9BOIagTS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","print(os.listdir('/content/pix2pixHD/checkpoints/'))"],"metadata":{"id":"mrUT-Vt28p29"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","logfile = '/content/pix2pixHD/checkpoints/yalihouse_hd/loss_log.txt'\n","\n","iters = []\n","g_gan, d_real, d_fake = [], [], []\n","\n","with open(logfile, 'r') as f:\n","    for line in f:\n","        if line.startswith('epoch'):\n","            parts = line.strip().split(',')\n","            iters.append(int(parts[1].split(':')[1]))\n","            g_gan.append(float(parts[2].split(':')[1]))\n","            d_real.append(float(parts[4].split(':')[1]))\n","            d_fake.append(float(parts[5].split(':')[1]))\n","\n","plt.figure(figsize=(12, 6))\n","plt.plot(iters, g_gan, label='Generator (G_GAN) Loss')\n","plt.plot(iters, d_real, label='Discriminator (D_real) Loss')\n","plt.plot(iters, d_fake, label='Discriminator (D_fake) Loss')\n","plt.xlabel('Iteration')\n","plt.ylabel('Loss')\n","plt.title('GAN Training Losses over Time')\n","plt.legend()\n","plt.grid()\n","plt.show()"],"metadata":{"id":"Suz17qeB7rUN"},"execution_count":null,"outputs":[]}]}